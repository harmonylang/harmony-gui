{
  "labels": {
    "__end__": 63
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Jump", "pc": "49" },
    { "op": "Frame", "name": "diner", "args": "which" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "LoadVar", "value": "which" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "LoadVar", "value": "which" },
    { "op": "DelVar", "value": "which" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Load", "value": [{ "type": "atom", "value": "N"}] },
    { "op": "Nary", "arity": 2, "value": "%" },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "StoreVar", "value": "(left, right)" },
    { "op": "Push", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" }] } },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "46", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "acquire" }] } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "forks" }] } },
    { "op": "LoadVar", "value": "left" },
    { "op": "Address" },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "acquire" }] } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "forks" }] } },
    { "op": "LoadVar", "value": "right" },
    { "op": "Address" },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "release" }] } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "forks" }] } },
    { "op": "LoadVar", "value": "left" },
    { "op": "Address" },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Pop" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "release" }] } },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "forks" }] } },
    { "op": "LoadVar", "value": "right" },
    { "op": "Address" },
    { "op": "Address" },
    { "op": "Load" },
    { "op": "Pop" },
    { "op": "Jump", "pc": "14" },
    { "op": "DelVar", "value": "left" },
    { "op": "DelVar", "value": "right" },
    { "op": "Return" },
    { "op": "AtomicInc", "lazy": "False" },
    { "op": "Push", "value": { "type": "pc", "value": "2" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "x"}] },
    { "op": "AtomicDec" },
    { "op": "Push", "value": { "type": "pc", "value": "49" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "y"}] },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Return" },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__ ()","start of method __init__"],
    ["Jump 49","set program counter to 49"],
    ["Frame diner which","start of method diner"],
    ["Push ()","push constant ()"],
    ["LoadVar which","push the value of which"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["LoadVar which","push the value of which"],
    ["DelVar which","delete method variable which"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Load N","push value of shared variable N"],
    ["2-ary %","pop 2 values and push the result of applying %"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["StoreVar (left, right)","pop a value and store in (left, right)"],
    ["Push { False, True }","push constant { False, True }"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 46","pop a value and jump to 46 if the value is False"],
    ["Push ?acquire","push constant ?acquire"],
    ["Push ?forks","push constant ?forks"],
    ["LoadVar left","push the value of left"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Pop","discard the top value on the stack"],
    ["Push ?acquire","push constant ?acquire"],
    ["Push ?forks","push constant ?forks"],
    ["LoadVar right","push the value of right"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Pop","discard the top value on the stack"],
    ["Push ?release","push constant ?release"],
    ["Push ?forks","push constant ?forks"],
    ["LoadVar left","push the value of left"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Pop","discard the top value on the stack"],
    ["Push ?release","push constant ?release"],
    ["Push ?forks","push constant ?forks"],
    ["LoadVar right","push the value of right"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Address","combine the top two values on the stack into an address and push the result"],
    ["Load","pop an address and push the value at the address"],
    ["Pop","discard the top value on the stack"],
    ["Jump 14","set program counter to 14"],
    ["DelVar left","delete method variable left"],
    ["DelVar right","delete method variable right"],
    ["Return","restore caller method state and push result"],
    ["AtomicInc(eager)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push PC(2)","push constant PC(2)"],
    ["Store x","pop a value and store it in shared variable x"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Push PC(49)","push constant PC(49)"],
    ["Store y","pop a value and store it in shared variable y"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push False","push constant False"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Return","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locations": {
    "0": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 14, "endcolumn": 7, "code": "def diner(which):" },
    "1": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 1, "endcolumn": 3, "code": "def diner(which):" },
    "2": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 10, "endcolumn": 1, "code": "def diner(which):" },
    "3": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 24, "endline": 2, "endcolumn": 45, "code": "    let left, right = (which, (which + 1) % N):" },
    "4": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 24, "endline": 2, "endcolumn": 28, "code": "    let left, right = (which, (which + 1) % N):" },
    "5": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 24, "endline": 2, "endcolumn": 45, "code": "    let left, right = (which, (which + 1) % N):" },
    "6": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 32, "endline": 2, "endcolumn": 36, "code": "    let left, right = (which, (which + 1) % N):" },
    "7": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 32, "endline": 2, "endcolumn": 36, "code": "    let left, right = (which, (which + 1) % N):" },
    "8": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 40, "endline": 2, "endcolumn": 40, "code": "    let left, right = (which, (which + 1) % N):" },
    "9": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 32, "endline": 2, "endcolumn": 40, "code": "    let left, right = (which, (which + 1) % N):" },
    "10": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 45, "endline": 2, "endcolumn": 45, "code": "    let left, right = (which, (which + 1) % N):" },
    "11": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 31, "endline": 2, "endcolumn": 45, "code": "    let left, right = (which, (which + 1) % N):" },
    "12": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 24, "endline": 2, "endcolumn": 45, "code": "    let left, right = (which, (which + 1) % N):" },
    "13": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 2, "column": 5, "endline": 10, "endcolumn": 1, "code": "    let left, right = (which, (which + 1) % N):" },
    "14": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 3, "column": 24, "endline": 3, "endcolumn": 34, "code": "        while choose({ False, True }):" },
    "15": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 3, "column": 15, "endline": 3, "endcolumn": 37, "code": "        while choose({ False, True }):" },
    "16": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 3, "column": 9, "endline": 10, "endcolumn": 1, "code": "        while choose({ False, True }):" },
    "17": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 13, "endline": 4, "endcolumn": 19, "code": "            acquire(?forks[left])" },
    "18": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 22, "endline": 4, "endcolumn": 26, "code": "            acquire(?forks[left])" },
    "19": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 28, "endline": 4, "endcolumn": 31, "code": "            acquire(?forks[left])" },
    "20": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 22, "endline": 4, "endcolumn": 32, "code": "            acquire(?forks[left])" },
    "21": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 13, "endline": 4, "endcolumn": 33, "code": "            acquire(?forks[left])" },
    "22": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 13, "endline": 4, "endcolumn": 33, "code": "            acquire(?forks[left])" },
    "23": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 4, "column": 13, "endline": 4, "endcolumn": 33, "code": "            acquire(?forks[left])" },
    "24": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 13, "endline": 5, "endcolumn": 19, "code": "            acquire(?forks[right])" },
    "25": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 22, "endline": 5, "endcolumn": 26, "code": "            acquire(?forks[right])" },
    "26": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 28, "endline": 5, "endcolumn": 32, "code": "            acquire(?forks[right])" },
    "27": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 22, "endline": 5, "endcolumn": 33, "code": "            acquire(?forks[right])" },
    "28": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 13, "endline": 5, "endcolumn": 34, "code": "            acquire(?forks[right])" },
    "29": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 13, "endline": 5, "endcolumn": 34, "code": "            acquire(?forks[right])" },
    "30": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 5, "column": 13, "endline": 5, "endcolumn": 34, "code": "            acquire(?forks[right])" },
    "31": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 13, "endline": 7, "endcolumn": 19, "code": "            release(?forks[left])" },
    "32": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 22, "endline": 7, "endcolumn": 26, "code": "            release(?forks[left])" },
    "33": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 28, "endline": 7, "endcolumn": 31, "code": "            release(?forks[left])" },
    "34": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 22, "endline": 7, "endcolumn": 32, "code": "            release(?forks[left])" },
    "35": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 13, "endline": 7, "endcolumn": 33, "code": "            release(?forks[left])" },
    "36": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 13, "endline": 7, "endcolumn": 33, "code": "            release(?forks[left])" },
    "37": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 7, "column": 13, "endline": 7, "endcolumn": 33, "code": "            release(?forks[left])" },
    "38": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 13, "endline": 8, "endcolumn": 19, "code": "            release(?forks[right])" },
    "39": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 22, "endline": 8, "endcolumn": 26, "code": "            release(?forks[right])" },
    "40": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 28, "endline": 8, "endcolumn": 32, "code": "            release(?forks[right])" },
    "41": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 22, "endline": 8, "endcolumn": 33, "code": "            release(?forks[right])" },
    "42": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 13, "endline": 8, "endcolumn": 34, "code": "            release(?forks[right])" },
    "43": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 13, "endline": 8, "endcolumn": 34, "code": "            release(?forks[right])" },
    "44": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 8, "column": 13, "endline": 8, "endcolumn": 34, "code": "            release(?forks[right])" },
    "45": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 10, "column": 1, "endline": 10, "endcolumn": 1, "code": "" },
    "46": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 10, "endcolumn": 1, "code": "def diner(which):" },
    "47": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 10, "endcolumn": 1, "code": "def diner(which):" },
    "48": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 10, "endcolumn": 1, "code": "def diner(which):" },
    "49": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 11, "column": 1, "endline": 11, "endcolumn": 14, "code": "LB: x = diner" },
    "50": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 11, "column": 9, "endline": 11, "endcolumn": 13, "code": "LB: x = diner" },
    "51": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 7, "code": "LB: x = diner" },
    "52": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 11, "column": 1, "endline": 11, "endcolumn": 14, "code": "LB: x = diner" },
    "53": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 12, "column": 5, "endline": 12, "endcolumn": 6, "code": "y = LB" },
    "54": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 12, "column": 1, "endline": 12, "endcolumn": 3, "code": "y = LB" },
    "55": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 1, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "56": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 1, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "57": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 8, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "58": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 1, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "59": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 1, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "60": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 13, "column": 1, "endline": 13, "endcolumn": 12, "code": "assert False" },
    "61": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 14, "endcolumn": 7, "code": "def diner(which):" },
    "62": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": 1, "column": 1, "endline": 14, "endcolumn": 7, "code": "def diner(which):" }
  }
}

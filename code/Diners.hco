{
  "issue": "Non-terminating state",
  "macrosteps": [
    {
      "id": "9003",
      "len": "1",
      "tid": "0",
      "ctx": "7feba04bfa89",
      "name": "__init__()",
      "microsteps": [
        {
          "shared": { },
          "npc": "1",
          "fp": "1",
          "trace": [
            {
              "pc": "1",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },
        {
          "npc": "52",
          "push": [ ],
          "pc": "1"
        },
        {
          "npc": "53",
          "push": [ { "type": "pc", "value": "55" } ],
          "pc": "52"
        },
        {
          "npc": "54",
          "pop": "1",
          "push": [ ],
          "pc": "53"
        },
        {
          "npc": "371",
          "push": [ ],
          "pc": "54"
        },
        {
          "npc": "372",
          "push": [ { "type": "pc", "value": "374" } ],
          "pc": "371"
        },
        {
          "npc": "373",
          "pop": "1",
          "push": [ ],
          "pc": "372"
        },
        {
          "npc": "392",
          "push": [ ],
          "pc": "373"
        },
        {
          "npc": "393",
          "push": [ { "type": "pc", "value": "395" } ],
          "pc": "392"
        },
        {
          "npc": "394",
          "pop": "1",
          "push": [ ],
          "pc": "393"
        },
        {
          "npc": "414",
          "push": [ ],
          "pc": "394"
        },
        {
          "npc": "415",
          "push": [ { "type": "pc", "value": "417" } ],
          "pc": "414"
        },
        {
          "npc": "416",
          "pop": "1",
          "push": [ ],
          "pc": "415"
        },
        {
          "npc": "433",
          "push": [ ],
          "pc": "416"
        },
        {
          "npc": "434",
          "push": [ { "type": "pc", "value": "436" } ],
          "pc": "433"
        },
        {
          "npc": "435",
          "pop": "1",
          "push": [ ],
          "pc": "434"
        },
        {
          "npc": "461",
          "push": [ ],
          "pc": "435"
        },
        {
          "npc": "462",
          "push": [ { "type": "pc", "value": "464" } ],
          "pc": "461"
        },
        {
          "npc": "463",
          "pop": "1",
          "push": [ ],
          "pc": "462"
        },
        {
          "npc": "490",
          "push": [ ],
          "pc": "463"
        },
        {
          "npc": "491",
          "push": [ { "type": "pc", "value": "493" } ],
          "pc": "490"
        },
        {
          "npc": "492",
          "pop": "1",
          "push": [ ],
          "pc": "491"
        },
        {
          "npc": "943",
          "push": [ ],
          "pc": "492"
        },
        {
          "npc": "944",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "943"
        },
        {
          "npc": "945",
          "push": [ { "type": "pc", "value": "679" } ],
          "pc": "944"
        },
        {
          "npc": "946",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "945"
        },
        {
          "npc": "679",
          "fp": "4",
          "trace": [
            {
              "pc": "947",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            },
            {
              "pc": "679",
              "xpc": "679",
              "method": "Lock()",
              "calltype": "normal",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 3
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15154" }, { "type": "list", "value": [] } ],
          "pc": "946"
        },
        {
          "npc": "680",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } } ] } ],
          "pc": "679"
        },
        {
          "npc": "681",
          "local": { },
          "push": [ ],
          "pc": "680"
        },
        {
          "npc": "682",
          "push": [ { "type": "pc", "value": "672" } ],
          "pc": "681"
        },
        {
          "npc": "683",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "682"
        },
        {
          "npc": "672",
          "fp": "6",
          "trace": [
            {
              "pc": "947",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            },
            {
              "pc": "684",
              "xpc": "679",
              "method": "Lock()",
              "calltype": "normal",
              "vars": { },
              "sp": 3
            },
            {
              "pc": "672",
              "xpc": "672",
              "method": "BinSema(False)",
              "calltype": "normal",
              "vars": { },
              "sp": 5
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "10946" }, { "type": "bool", "value": "False" } ],
          "pc": "683"
        },
        {
          "npc": "673",
          "local": { "acquired": { "type": "bool", "value": "False" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "672"
        },
        {
          "npc": "674",
          "local": { "acquired": { "type": "bool", "value": "False" } },
          "push": [ ],
          "pc": "673"
        },
        {
          "npc": "675",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "674"
        },
        {
          "npc": "676",
          "local": { },
          "push": [ ],
          "pc": "675"
        },
        {
          "npc": "677",
          "local": { "result": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "676"
        },
        {
          "npc": "684",
          "fp": "4",
          "trace": [
            {
              "pc": "947",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            },
            {
              "pc": "684",
              "xpc": "679",
              "method": "Lock()",
              "calltype": "normal",
              "vars": { },
              "sp": 3
            }
          ],
          "local": { },
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "677"
        },
        {
          "npc": "685",
          "local": { "result": { "type": "bool", "value": "False" } },
          "pop": "1",
          "push": [ ],
          "pc": "684"
        },
        {
          "npc": "947",
          "fp": "1",
          "trace": [
            {
              "pc": "947",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] } },
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "685"
        },
        {
          "npc": "948",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "947"
        },
        {
          "npc": "949",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "948"
        },
        {
          "npc": "950",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } ],
          "pc": "949"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
          "npc": "951",
          "pop": "1",
          "push": [ ],
          "pc": "950"
        },
        {
          "npc": "995",
          "push": [ ],
          "pc": "951"
        },
        {
          "npc": "996",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "995"
        },
        {
          "npc": "997",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "996"
        },
        {
          "npc": "998",
          "local": { "i": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ],
          "pc": "997"
        },
        {
          "npc": "999",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1000",
          "push": [ { "type": "pc", "value": "952" } ],
          "pc": "999"
        },
        {
          "npc": "1001",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1000"
        },
        {
          "npc": "1002",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "1001"
        },
        {
          "npc": "1003",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1002"
        },
        {
          "npc": "1004",
          "pop": "3",
          "push": [ ],
          "pc": "1003"
        },
        {
          "npc": "997",
          "push": [ ],
          "pc": "1004"
        },
        {
          "npc": "998",
          "local": { "i": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ],
          "pc": "997"
        },
        {
          "npc": "999",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1000",
          "push": [ { "type": "pc", "value": "952" } ],
          "pc": "999"
        },
        {
          "npc": "1001",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "1000"
        },
        {
          "npc": "1002",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "1001"
        },
        {
          "npc": "1003",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1002"
        },
        {
          "npc": "1004",
          "pop": "3",
          "push": [ ],
          "pc": "1003"
        },
        {
          "npc": "997",
          "push": [ ],
          "pc": "1004"
        },
        {
          "npc": "998",
          "local": { "i": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ],
          "pc": "997"
        },
        {
          "npc": "999",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1000",
          "push": [ { "type": "pc", "value": "952" } ],
          "pc": "999"
        },
        {
          "npc": "1001",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "1000"
        },
        {
          "npc": "1002",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "1001"
        },
        {
          "npc": "1003",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1002"
        },
        {
          "npc": "1004",
          "pop": "3",
          "push": [ ],
          "pc": "1003"
        },
        {
          "npc": "997",
          "push": [ ],
          "pc": "1004"
        },
        {
          "npc": "998",
          "local": { "i": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ],
          "pc": "997"
        },
        {
          "npc": "999",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1000",
          "push": [ { "type": "pc", "value": "952" } ],
          "pc": "999"
        },
        {
          "npc": "1001",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "1000"
        },
        {
          "npc": "1002",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "1001"
        },
        {
          "npc": "1003",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1002"
        },
        {
          "npc": "1004",
          "pop": "3",
          "push": [ ],
          "pc": "1003"
        },
        {
          "npc": "997",
          "push": [ ],
          "pc": "1004"
        },
        {
          "npc": "998",
          "local": { "i": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "5" }, { "type": "bool", "value": "True" } ],
          "pc": "997"
        },
        {
          "npc": "999",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1000",
          "push": [ { "type": "pc", "value": "952" } ],
          "pc": "999"
        },
        {
          "npc": "1001",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "1000"
        },
        {
          "npc": "1002",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "1001"
        },
        {
          "npc": "1003",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "1002"
        },
        {
          "npc": "1004",
          "pop": "3",
          "push": [ ],
          "pc": "1003"
        },
        {
          "npc": "997",
          "push": [ ],
          "pc": "1004"
        },
        {
          "npc": "998",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "997"
        },
        {
          "npc": "1005",
          "pop": "1",
          "push": [ ],
          "pc": "998"
        },
        {
          "npc": "1006",
          "push": [ ],
          "pc": "1005"
        },
        {
          "npc": "1006",
          "local": { },
          "mode": "terminated",
          "pop": "1",
          "push": [ ],
          "pc": "1006"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1",
          "7feba58002e9": "1",
          "7feba5800359": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba58002e9",
          "fp": "1",
          "name": "diner(3)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "7feba5800359",
          "fp": "1",
          "name": "diner(4)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "9085",
      "len": "2",
      "tid": "4",
      "ctx": "7feba58002e9",
      "name": "diner(3)",
      "microsteps": [
        {
          "npc": "953",
          "fp": "1",
          "trace": [
            {
              "pc": "953",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "3" } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "3" } },
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "952"
        },
        {
          "npc": "954",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "953"
        },
        {
          "npc": "955",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "954"
        },
        {
          "npc": "956",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "955"
        },
        {
          "npc": "957",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "956"
        },
        {
          "npc": "958",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "957"
        },
        {
          "npc": "959",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "958"
        },
        {
          "npc": "960",
          "pop": "2",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "959"
        },
        {
          "npc": "961",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "960"
        },
        {
          "npc": "962",
          "pop": "1",
          "push": [ ],
          "pc": "961"
        },
        {
          "npc": "963",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "962"
        },
        {
          "npc": "964",
          "local": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ ],
          "pc": "963"
        },
        {
          "npc": "965",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "964"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8f819": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1",
          "7feba5800359": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3d8f819",
          "fp": "1",
          "name": "diner(3)",
          "entry": "952",
          "pc": "965",
          "trace": [
            {
              "pc": "965",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            }
          ],
          "mode": "choosing"
        },
        {
          "tid": "5",
          "hvalue": "7feba5800359",
          "fp": "1",
          "name": "diner(4)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "9089",
      "len": "2",
      "tid": "4",
      "ctx": "7feba3d8f819",
      "name": "diner(3)",
      "choice": { "type": "bool", "value": "True" },
      "microsteps": [
        {
          "choose": { "type": "bool", "value": "True" },
          "npc": "966",
          "fp": "1",
          "trace": [
            {
              "pc": "966",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
          "push": [ { "type": "dict", "value": [] }, { "type": "bool", "value": "True" } ],
          "pc": "965"
        },
        {
          "npc": "967",
          "pop": "1",
          "push": [ ],
          "pc": "966"
        },
        {
          "npc": "968",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "967"
        },
        {
          "npc": "969",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "968"
        },
        {
          "npc": "970",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "969"
        },
        {
          "npc": "971",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "970"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15554" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "971"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d90039": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1",
          "7feba5800359": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3d90039",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "7feba5800359",
          "fp": "1",
          "name": "diner(4)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "9088",
      "len": "2",
      "tid": "4",
      "ctx": "7feba3d90039",
      "name": "diner(3)",
      "microsteps": [
        {
          "npc": "697",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "697",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] }, { "type": "int", "value": "15554" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "696"
        },
        {
          "npc": "698",
          "readonly": "1",
          "push": [ ],
          "pc": "697"
        },
        {
          "npc": "699",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "698"
        },
        {
          "npc": "700",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "699"
        },
        {
          "npc": "701",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "700"
        },
        {
          "npc": "702",
          "pop": "1",
          "push": [ ],
          "pc": "701"
        },
        {
          "npc": "706",
          "push": [ ],
          "pc": "702"
        },
        {
          "npc": "707",
          "readonly": "0",
          "push": [ ],
          "pc": "706"
        },
        {
          "npc": "708",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "707"
        },
        {
          "npc": "709",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "708"
        },
        {
          "npc": "710",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "709"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "711",
          "pop": "2",
          "push": [ ],
          "pc": "710"
        },
        {
          "npc": "712",
          "atomic": "0",
          "push": [ ],
          "pc": "711"
        },
        {
          "npc": "972",
          "fp": "1",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
          "pop": "2",
          "push": [ { "type": "address", "value": [] } ],
          "pc": "712"
        },
        {
          "npc": "973",
          "pop": "1",
          "push": [ ],
          "pc": "972"
        },
        {
          "npc": "974",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "973"
        },
        {
          "npc": "975",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "974"
        },
        {
          "npc": "976",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "975"
        },
        {
          "npc": "977",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "976"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15650" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "977"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3e90cd9": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1",
          "7feba5800359": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "7feba5800359",
          "fp": "1",
          "name": "diner(4)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8927",
      "len": "3",
      "tid": "5",
      "ctx": "7feba5800359",
      "name": "diner(4)",
      "microsteps": [
        {
          "npc": "953",
          "fp": "1",
          "trace": [
            {
              "pc": "953",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "4" } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "4" } },
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "952"
        },
        {
          "npc": "954",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "953"
        },
        {
          "npc": "955",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "954"
        },
        {
          "npc": "956",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "955"
        },
        {
          "npc": "957",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "956"
        },
        {
          "npc": "958",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "957"
        },
        {
          "npc": "959",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "958"
        },
        {
          "npc": "960",
          "pop": "2",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "959"
        },
        {
          "npc": "961",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "960"
        },
        {
          "npc": "962",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "961"
        },
        {
          "npc": "963",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "0" } ] } ],
          "pc": "962"
        },
        {
          "npc": "964",
          "local": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
          "pop": "1",
          "push": [ ],
          "pc": "963"
        },
        {
          "npc": "965",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "964"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8fa69": "1",
          "7feba3e90cd9": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "7feba3d8fa69",
          "fp": "1",
          "name": "diner(4)",
          "entry": "952",
          "pc": "965",
          "trace": [
            {
              "pc": "965",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            }
          ],
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "8925",
      "len": "3",
      "tid": "5",
      "ctx": "7feba3d8fa69",
      "name": "diner(4)",
      "choice": { "type": "bool", "value": "True" },
      "microsteps": [
        {
          "choose": { "type": "bool", "value": "True" },
          "npc": "966",
          "fp": "1",
          "trace": [
            {
              "pc": "966",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
          "push": [ { "type": "dict", "value": [] }, { "type": "bool", "value": "True" } ],
          "pc": "965"
        },
        {
          "npc": "967",
          "pop": "1",
          "push": [ ],
          "pc": "966"
        },
        {
          "npc": "968",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "967"
        },
        {
          "npc": "969",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "968"
        },
        {
          "npc": "970",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "969"
        },
        {
          "npc": "971",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "970"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15554" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "971"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "0" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8fd69": "1",
          "7feba3e90cd9": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "5",
          "hvalue": "7feba3d8fd69",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8930",
      "len": "3",
      "tid": "5",
      "ctx": "7feba3d8fd69",
      "name": "diner(4)",
      "microsteps": [
        {
          "npc": "697",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "697",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] }, { "type": "int", "value": "15554" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "0" } } ] } ],
          "pc": "696"
        },
        {
          "npc": "698",
          "readonly": "1",
          "push": [ ],
          "pc": "697"
        },
        {
          "npc": "699",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "698"
        },
        {
          "npc": "700",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "699"
        },
        {
          "npc": "701",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "700"
        },
        {
          "npc": "702",
          "pop": "1",
          "push": [ ],
          "pc": "701"
        },
        {
          "npc": "706",
          "push": [ ],
          "pc": "702"
        },
        {
          "npc": "707",
          "readonly": "0",
          "push": [ ],
          "pc": "706"
        },
        {
          "npc": "708",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] } ],
          "pc": "707"
        },
        {
          "npc": "709",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "708"
        },
        {
          "npc": "710",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "709"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "711",
          "pop": "2",
          "push": [ ],
          "pc": "710"
        },
        {
          "npc": "712",
          "atomic": "0",
          "push": [ ],
          "pc": "711"
        },
        {
          "npc": "972",
          "fp": "1",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
          "pop": "2",
          "push": [ { "type": "address", "value": [] } ],
          "pc": "712"
        },
        {
          "npc": "973",
          "pop": "1",
          "push": [ ],
          "pc": "972"
        },
        {
          "npc": "974",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "973"
        },
        {
          "npc": "975",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "974"
        },
        {
          "npc": "976",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "975"
        },
        {
          "npc": "977",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "976"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15650" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "977"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "0" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800199": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba5800199",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8705",
      "len": "4",
      "tid": "1",
      "ctx": "7feba5800199",
      "name": "diner(0)",
      "microsteps": [
        {
          "npc": "953",
          "fp": "1",
          "trace": [
            {
              "pc": "953",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "0" } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "0" } },
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "952"
        },
        {
          "npc": "954",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "953"
        },
        {
          "npc": "955",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "954"
        },
        {
          "npc": "956",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "0" } ] } ],
          "pc": "955"
        },
        {
          "npc": "957",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "956"
        },
        {
          "npc": "958",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "957"
        },
        {
          "npc": "959",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "958"
        },
        {
          "npc": "960",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "959"
        },
        {
          "npc": "961",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "960"
        },
        {
          "npc": "962",
          "pop": "1",
          "push": [ ],
          "pc": "961"
        },
        {
          "npc": "963",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] } ],
          "pc": "962"
        },
        {
          "npc": "964",
          "local": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ ],
          "pc": "963"
        },
        {
          "npc": "965",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "964"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8f129": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3d8f129",
          "fp": "1",
          "name": "diner(0)",
          "entry": "952",
          "pc": "965",
          "trace": [
            {
              "pc": "965",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            }
          ],
          "mode": "choosing"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8693",
      "len": "4",
      "tid": "1",
      "ctx": "7feba3d8f129",
      "name": "diner(0)",
      "choice": { "type": "bool", "value": "True" },
      "microsteps": [
        {
          "choose": { "type": "bool", "value": "True" },
          "npc": "966",
          "fp": "1",
          "trace": [
            {
              "pc": "966",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
          "push": [ { "type": "dict", "value": [] }, { "type": "bool", "value": "True" } ],
          "pc": "965"
        },
        {
          "npc": "967",
          "pop": "1",
          "push": [ ],
          "pc": "966"
        },
        {
          "npc": "968",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "967"
        },
        {
          "npc": "969",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "968"
        },
        {
          "npc": "970",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "969"
        },
        {
          "npc": "971",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "970"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15554" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "971"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d908a9": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3d908a9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "8719",
      "len": "4",
      "tid": "1",
      "ctx": "7feba3d908a9",
      "name": "diner(0)",
      "microsteps": [
        {
          "npc": "697",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "697",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] }, { "type": "int", "value": "15554" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "696"
        },
        {
          "npc": "698",
          "readonly": "1",
          "push": [ ],
          "pc": "697"
        },
        {
          "npc": "699",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "698"
        },
        {
          "npc": "700",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "699"
        },
        {
          "npc": "701",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "700"
        },
        {
          "npc": "702",
          "pop": "1",
          "push": [ ],
          "pc": "701"
        },
        {
          "npc": "706",
          "push": [ ],
          "pc": "702"
        },
        {
          "npc": "707",
          "readonly": "0",
          "push": [ ],
          "pc": "706"
        },
        {
          "npc": "708",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] } ],
          "pc": "707"
        },
        {
          "npc": "709",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "708"
        },
        {
          "npc": "710",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "709"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "711",
          "pop": "2",
          "push": [ ],
          "pc": "710"
        },
        {
          "npc": "712",
          "atomic": "0",
          "push": [ ],
          "pc": "711"
        },
        {
          "npc": "972",
          "fp": "1",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
          "pop": "2",
          "push": [ { "type": "address", "value": [] } ],
          "pc": "712"
        },
        {
          "npc": "973",
          "pop": "1",
          "push": [ ],
          "pc": "972"
        },
        {
          "npc": "974",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "973"
        },
        {
          "npc": "975",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "974"
        },
        {
          "npc": "976",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "975"
        },
        {
          "npc": "977",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "976"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15650" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "977"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3e8f0b9": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1",
          "7feba5800279": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba5800279",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "8087",
      "len": "5",
      "tid": "3",
      "ctx": "7feba5800279",
      "name": "diner(2)",
      "microsteps": [
        {
          "npc": "953",
          "fp": "1",
          "trace": [
            {
              "pc": "953",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "2" } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "2" } },
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "952"
        },
        {
          "npc": "954",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "953"
        },
        {
          "npc": "955",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "954"
        },
        {
          "npc": "956",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "955"
        },
        {
          "npc": "957",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "956"
        },
        {
          "npc": "958",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "957"
        },
        {
          "npc": "959",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "958"
        },
        {
          "npc": "960",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "959"
        },
        {
          "npc": "961",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "960"
        },
        {
          "npc": "962",
          "pop": "1",
          "push": [ ],
          "pc": "961"
        },
        {
          "npc": "963",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "962"
        },
        {
          "npc": "964",
          "local": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ ],
          "pc": "963"
        },
        {
          "npc": "965",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "964"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8f5c9": "1",
          "7feba3e8f0b9": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba3d8f5c9",
          "fp": "1",
          "name": "diner(2)",
          "entry": "952",
          "pc": "965",
          "trace": [
            {
              "pc": "965",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            }
          ],
          "mode": "choosing"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "7819",
      "len": "5",
      "tid": "3",
      "ctx": "7feba3d8f5c9",
      "name": "diner(2)",
      "choice": { "type": "bool", "value": "True" },
      "microsteps": [
        {
          "choose": { "type": "bool", "value": "True" },
          "npc": "966",
          "fp": "1",
          "trace": [
            {
              "pc": "966",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
          "push": [ { "type": "dict", "value": [] }, { "type": "bool", "value": "True" } ],
          "pc": "965"
        },
        {
          "npc": "967",
          "pop": "1",
          "push": [ ],
          "pc": "966"
        },
        {
          "npc": "968",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "967"
        },
        {
          "npc": "969",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "968"
        },
        {
          "npc": "970",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "969"
        },
        {
          "npc": "971",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "970"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[2])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15554" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "971"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "3" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d90309": "1",
          "7feba3e8f0b9": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba3d90309",
          "fp": "3",
          "name": "diner(2)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[2])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "7818",
      "len": "5",
      "tid": "3",
      "ctx": "7feba3d90309",
      "name": "diner(2)",
      "microsteps": [
        {
          "npc": "697",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "697",
              "xpc": "695",
              "method": "acquire(?forks[2])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] }, { "type": "int", "value": "15554" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "3" } } ] } ],
          "pc": "696"
        },
        {
          "npc": "698",
          "readonly": "1",
          "push": [ ],
          "pc": "697"
        },
        {
          "npc": "699",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "698"
        },
        {
          "npc": "700",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "699"
        },
        {
          "npc": "701",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "700"
        },
        {
          "npc": "702",
          "pop": "1",
          "push": [ ],
          "pc": "701"
        },
        {
          "npc": "706",
          "push": [ ],
          "pc": "702"
        },
        {
          "npc": "707",
          "readonly": "0",
          "push": [ ],
          "pc": "706"
        },
        {
          "npc": "708",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "707"
        },
        {
          "npc": "709",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "708"
        },
        {
          "npc": "710",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "709"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "711",
          "pop": "2",
          "push": [ ],
          "pc": "710"
        },
        {
          "npc": "712",
          "atomic": "0",
          "push": [ ],
          "pc": "711"
        },
        {
          "npc": "972",
          "fp": "1",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
          "pop": "2",
          "push": [ { "type": "address", "value": [] } ],
          "pc": "712"
        },
        {
          "npc": "973",
          "pop": "1",
          "push": [ ],
          "pc": "972"
        },
        {
          "npc": "974",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "973"
        },
        {
          "npc": "975",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "974"
        },
        {
          "npc": "976",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "975"
        },
        {
          "npc": "977",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "976"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15650" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] } ],
          "pc": "977"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "3" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3e8f0b9": "1",
          "7feba3e90379": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1",
          "7feba5800209": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba5800209",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "952",
          "trace": [
            {
              "pc": "952",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba3e90379",
          "fp": "3",
          "name": "diner(2)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "5769",
      "len": "6",
      "tid": "2",
      "ctx": "7feba5800209",
      "name": "diner(1)",
      "microsteps": [
        {
          "npc": "953",
          "fp": "1",
          "trace": [
            {
              "pc": "953",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "1" } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] }, "which": { "type": "int", "value": "1" } },
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "952"
        },
        {
          "npc": "954",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "953"
        },
        {
          "npc": "955",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "954"
        },
        {
          "npc": "956",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "955"
        },
        {
          "npc": "957",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "956"
        },
        {
          "npc": "958",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "957"
        },
        {
          "npc": "959",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "958"
        },
        {
          "npc": "960",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "959"
        },
        {
          "npc": "961",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "960"
        },
        {
          "npc": "962",
          "pop": "1",
          "push": [ ],
          "pc": "961"
        },
        {
          "npc": "963",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "962"
        },
        {
          "npc": "964",
          "local": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "963"
        },
        {
          "npc": "965",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "964"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d8f379": "1",
          "7feba3e8f0b9": "1",
          "7feba3e90379": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba3d8f379",
          "fp": "1",
          "name": "diner(1)",
          "entry": "952",
          "pc": "965",
          "trace": [
            {
              "pc": "965",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            }
          ],
          "mode": "choosing"
        },
        {
          "tid": "3",
          "hvalue": "7feba3e90379",
          "fp": "3",
          "name": "diner(2)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "1525",
      "len": "6",
      "tid": "2",
      "ctx": "7feba3d8f379",
      "name": "diner(1)",
      "choice": { "type": "bool", "value": "True" },
      "microsteps": [
        {
          "choose": { "type": "bool", "value": "True" },
          "npc": "966",
          "fp": "1",
          "trace": [
            {
              "pc": "966",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
          "push": [ { "type": "dict", "value": [] }, { "type": "bool", "value": "True" } ],
          "pc": "965"
        },
        {
          "npc": "967",
          "pop": "1",
          "push": [ ],
          "pc": "966"
        },
        {
          "npc": "968",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "967"
        },
        {
          "npc": "969",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "968"
        },
        {
          "npc": "970",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "969"
        },
        {
          "npc": "971",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "970"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15554" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "971"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3d905d9": "1",
          "7feba3e8f0b9": "1",
          "7feba3e90379": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7feba3d905d9",
          "fp": "3",
          "name": "diner(1)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "runnable"
        },
        {
          "tid": "3",
          "hvalue": "7feba3e90379",
          "fp": "3",
          "name": "diner(2)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    },
    {
      "id": "2725",
      "len": "6",
      "tid": "2",
      "ctx": "7feba3d905d9",
      "name": "diner(1)",
      "microsteps": [
        {
          "npc": "697",
          "fp": "3",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            },
            {
              "pc": "697",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] }, { "type": "int", "value": "15554" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "696"
        },
        {
          "npc": "698",
          "readonly": "1",
          "push": [ ],
          "pc": "697"
        },
        {
          "npc": "699",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "698"
        },
        {
          "npc": "700",
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "699"
        },
        {
          "npc": "701",
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "700"
        },
        {
          "npc": "702",
          "pop": "1",
          "push": [ ],
          "pc": "701"
        },
        {
          "npc": "706",
          "push": [ ],
          "pc": "702"
        },
        {
          "npc": "707",
          "readonly": "0",
          "push": [ ],
          "pc": "706"
        },
        {
          "npc": "708",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] } ],
          "pc": "707"
        },
        {
          "npc": "709",
          "local": { "result": { "type": "address", "value": [] } },
          "push": [ ],
          "pc": "708"
        },
        {
          "npc": "710",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "709"
        },
        {
          "shared": { "forks": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "711",
          "pop": "2",
          "push": [ ],
          "pc": "710"
        },
        {
          "npc": "712",
          "atomic": "0",
          "push": [ ],
          "pc": "711"
        },
        {
          "npc": "972",
          "fp": "1",
          "trace": [
            {
              "pc": "972",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            }
          ],
          "local": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
          "pop": "2",
          "push": [ { "type": "address", "value": [] } ],
          "pc": "712"
        },
        {
          "npc": "973",
          "pop": "1",
          "push": [ ],
          "pc": "972"
        },
        {
          "npc": "974",
          "push": [ { "type": "pc", "value": "695" } ],
          "pc": "973"
        },
        {
          "npc": "975",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" } ] } ],
          "pc": "974"
        },
        {
          "npc": "976",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "975"
        },
        {
          "npc": "977",
          "pop": "2",
          "push": [ { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "976"
        },
        {
          "npc": "695",
          "fp": "3",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            },
            {
              "pc": "695",
              "xpc": "695",
              "method": "acquire(?forks[2])",
              "calltype": "normal",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 2
            }
          ],
          "pop": "2",
          "push": [ { "type": "int", "value": "15650" }, { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] } ],
          "pc": "977"
        },
        {
          "npc": "696",
          "local": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "left" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "result" }, "value": { "type": "address", "value": [] } }, { "key": { "type": "atom", "value": "right" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "695"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7feba3e8f0b9": "1",
          "7feba3e8fa19": "1",
          "7feba3e90379": "1",
          "7feba3e90cd9": "1",
          "7feba3e91639": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7feba5800389",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "1006",
          "trace": [
            {
              "pc": "1006",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { },
              "sp": 0
            }
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7feba3e8f0b9",
          "fp": "3",
          "name": "diner(0)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(0)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "0" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "1" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[1])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "1" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "7feba3e8fa19",
          "fp": "3",
          "name": "diner(1)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(1)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "1" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "2" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[2])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "2" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "3",
          "hvalue": "7feba3e90379",
          "fp": "3",
          "name": "diner(2)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(2)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "2" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "3" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[3])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "3" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "4",
          "hvalue": "7feba3e90cd9",
          "fp": "3",
          "name": "diner(3)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(3)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "3" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "4" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[4])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "4" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        },
        {
          "tid": "5",
          "hvalue": "7feba3e91639",
          "fp": "3",
          "name": "diner(4)",
          "entry": "952",
          "pc": "696",
          "trace": [
            {
              "pc": "978",
              "xpc": "952",
              "method": "diner(4)",
              "calltype": "process",
              "vars": { "left": { "type": "int", "value": "4" }, "result": { "type": "address", "value": [] }, "right": { "type": "int", "value": "0" } },
              "sp": 0
            },
            {
              "pc": "696",
              "xpc": "695",
              "method": "acquire(?forks[0])",
              "calltype": "normal",
              "vars": { "binsema": { "type": "address", "value": [{ "type": "atom", "value": "forks" }, { "type": "int", "value": "0" } ] }, "result": { "type": "address", "value": [] } },
              "sp": 2
            }
          ],
          "mode": "blocked"
        }
      ]
    }
  ],
  "code": [
    "Frame __init__ ()",
    "Jump 52",
    "Frame subseq (s, b, e)",
    "DelVar result",
    "Push ()",
    "StoreVar $accu3",
    "LoadVar b",
    "DelVar b",
    "LoadVar e",
    "DelVar e",
    "Push 1",
    "2-ary -",
    "2-ary ..",
    "Push 0",
    "Cut(x)",
    "JumpCond False 25",
    "LoadVar $accu3",
    "DelVar $accu3",
    "LoadVar s",
    "LoadVar x",
    "DelVar x",
    "Apply",
    "2-ary ListAdd",
    "StoreVar $accu3",
    "Jump 14",
    "DelVar s",
    "DelVar x",
    "LoadVar $accu3",
    "DelVar $accu3",
    "StoreVar result",
    "Return",
    "Jump 52",
    "Frame append (s, e)",
    "DelVar result",
    "LoadVar s",
    "DelVar s",
    "Push ()",
    "LoadVar e",
    "DelVar e",
    "2-ary ListAdd",
    "2-ary +",
    "StoreVar result",
    "Return",
    "Jump 52",
    "Frame head s",
    "DelVar result",
    "LoadVar s",
    "DelVar s",
    "Push 0",
    "Apply",
    "StoreVar result",
    "Return",
    "Push PC(55)",
    "Builtin(list$tail)",
    "Jump 371",
    "Frame tail s",
    "DelVar result",
    "Push PC(2)",
    "Push ()",
    "LoadVar s",
    "2-ary ListAdd",
    "Push 1",
    "2-ary ListAdd",
    "LoadVar s",
    "DelVar s",
    "1-ary len",
    "2-ary ListAdd",
    "Apply",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame sum a",
    "DelVar result",
    "Push 0",
    "StoreVar result",
    "LoadVar a",
    "DelVar a",
    "Push 0",
    "Cut(v)",
    "JumpCond False 87",
    "LoadVar result",
    "DelVar result",
    "LoadVar v",
    "DelVar v",
    "2-ary +",
    "StoreVar result",
    "Jump 78",
    "DelVar v",
    "Return",
    "Jump 371",
    "Frame set a",
    "DelVar result",
    "Push {}",
    "StoreVar $accu71",
    "LoadVar a",
    "DelVar a",
    "Push 0",
    "Cut(v)",
    "JumpCond False 106",
    "LoadVar $accu71",
    "DelVar $accu71",
    "LoadVar v",
    "DelVar v",
    "2-ary SetAdd",
    "StoreVar $accu71",
    "Jump 97",
    "DelVar v",
    "LoadVar $accu71",
    "DelVar $accu71",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame list a",
    "DelVar result",
    "Push ()",
    "StoreVar $accu87",
    "LoadVar a",
    "DelVar a",
    "Push 0",
    "Cut(v)",
    "JumpCond False 128",
    "LoadVar $accu87",
    "DelVar $accu87",
    "LoadVar v",
    "DelVar v",
    "2-ary ListAdd",
    "StoreVar $accu87",
    "Jump 119",
    "DelVar v",
    "LoadVar $accu87",
    "DelVar $accu87",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame values d",
    "DelVar result",
    "Push ()",
    "StoreVar $accu103",
    "LoadVar d",
    "DelVar d",
    "Push 0",
    "Cut(_, v)",
    "DelVar _",
    "JumpCond False 151",
    "LoadVar $accu103",
    "DelVar $accu103",
    "LoadVar v",
    "DelVar v",
    "2-ary ListAdd",
    "StoreVar $accu103",
    "Jump 141",
    "DelVar v",
    "LoadVar $accu103",
    "DelVar $accu103",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame items d",
    "DelVar result",
    "Push ()",
    "StoreVar $accu119",
    "LoadVar d",
    "DelVar d",
    "Push 0",
    "Cut(k, v)",
    "JumpCond False 178",
    "LoadVar $accu119",
    "DelVar $accu119",
    "Push ()",
    "LoadVar k",
    "DelVar k",
    "2-ary ListAdd",
    "LoadVar v",
    "DelVar v",
    "2-ary ListAdd",
    "2-ary ListAdd",
    "StoreVar $accu119",
    "Jump 164",
    "DelVar k",
    "DelVar v",
    "LoadVar $accu119",
    "DelVar $accu119",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame qsort a",
    "DelVar result",
    "LoadVar a",
    "Push ()",
    "2-ary ==",
    "JumpCond False 195",
    "DelVar a",
    "Push ()",
    "StoreVar result",
    "Jump 265",
    "Push ()",
    "Push PC(44)",
    "LoadVar a",
    "Apply",
    "2-ary ListAdd",
    "Push PC(55)",
    "LoadVar a",
    "DelVar a",
    "Apply",
    "2-ary ListAdd",
    "StoreVar (pivot, rest)",
    "Push ()",
    "StoreVar $accu156",
    "LoadVar rest",
    "Push 0",
    "DelVar v",
    "Cut(v)",
    "JumpCond False 224",
    "LoadVar v",
    "LoadVar pivot",
    "2-ary <",
    "JumpCond False 210",
    "LoadVar $accu156",
    "DelVar $accu156",
    "LoadVar v",
    "DelVar v",
    "2-ary ListAdd",
    "StoreVar $accu156",
    "Jump 210",
    "DelVar v",
    "LoadVar $accu156",
    "DelVar $accu156",
    "StoreVar lower",
    "Push ()",
    "StoreVar $accu173",
    "LoadVar rest",
    "DelVar rest",
    "Push 0",
    "DelVar v",
    "Cut(v)",
    "JumpCond False 247",
    "LoadVar v",
    "LoadVar pivot",
    "2-ary >=",
    "JumpCond False 233",
    "LoadVar $accu173",
    "DelVar $accu173",
    "LoadVar v",
    "DelVar v",
    "2-ary ListAdd",
    "StoreVar $accu173",
    "Jump 233",
    "DelVar v",
    "LoadVar $accu173",
    "DelVar $accu173",
    "StoreVar higher",
    "Push PC(185)",
    "LoadVar lower",
    "DelVar lower",
    "Apply",
    "Push ()",
    "LoadVar pivot",
    "DelVar pivot",
    "2-ary ListAdd",
    "Push PC(185)",
    "LoadVar higher",
    "DelVar higher",
    "Apply",
    "3-ary +",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame sorted d",
    "DelVar result",
    "Push PC(185)",
    "Push PC(112)",
    "LoadVar d",
    "DelVar d",
    "Apply",
    "Apply",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame reversed d",
    "DelVar result",
    "LoadVar d",
    "1-ary len",
    "StoreVar n",
    "Push ()",
    "StoreVar $accu216",
    "Push 1",
    "LoadVar n",
    "2-ary ..",
    "Push 0",
    "Cut(i)",
    "JumpCond False 302",
    "LoadVar $accu216",
    "DelVar $accu216",
    "LoadVar d",
    "LoadVar n",
    "LoadVar i",
    "DelVar i",
    "2-ary -",
    "Apply",
    "2-ary ListAdd",
    "StoreVar $accu216",
    "Jump 289",
    "DelVar d",
    "DelVar i",
    "DelVar n",
    "LoadVar $accu216",
    "DelVar $accu216",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame empty ()",
    "DelVar result",
    "Push {:}",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame fromSet s",
    "DelVar result",
    "Push {:}",
    "StoreVar $accu243",
    "LoadVar s",
    "DelVar s",
    "Push 0",
    "Cut(elt)",
    "JumpCond False 333",
    "LoadVar $accu243",
    "DelVar $accu243",
    "LoadVar elt",
    "DelVar elt",
    "Push 1",
    "3-ary DictAdd",
    "StoreVar $accu243",
    "Jump 323",
    "DelVar elt",
    "LoadVar $accu243",
    "DelVar $accu243",
    "StoreVar result",
    "Return",
    "Jump 371",
    "Frame fromList a",
    "DelVar result",
    "Push {:}",
    "StoreVar result",
    "LoadVar a",
    "DelVar a",
    "Push 0",
    "Cut(v)",
    "JumpCond False 369",
    "LoadVar v",
    "LoadVar result",
    "2-ary in",
    "JumpCond False 362",
    "Push ?result",
    "LoadVar v",
    "DelVar v",
    "Address",
    "Dup",
    "LoadVar [result]",
    "Push 1",
    "2-ary +",
    "StoreVar [result]",
    "Jump 346",
    "Push ?result",
    "LoadVar v",
    "DelVar v",
    "Address",
    "Push 1",
    "StoreVar [result]",
    "Jump 346",
    "DelVar v",
    "Return",
    "Push PC(374)",
    "Builtin(bag$multiplicity)",
    "Jump 392",
    "Frame multiplicity (bg, elt)",
    "DelVar result",
    "LoadVar elt",
    "LoadVar bg",
    "2-ary in",
    "JumpCond False 387",
    "LoadVar bg",
    "DelVar bg",
    "LoadVar elt",
    "DelVar elt",
    "Apply",
    "StoreVar result",
    "Jump 391",
    "DelVar bg",
    "DelVar elt",
    "Push 0",
    "StoreVar result",
    "Return",
    "Push PC(395)",
    "Builtin(bag$size)",
    "Jump 414",
    "Frame size bg",
    "DelVar result",
    "Push 0",
    "StoreVar result",
    "LoadVar bg",
    "DelVar bg",
    "Push 0",
    "Cut(_, c)",
    "DelVar _",
    "JumpCond False 412",
    "LoadVar result",
    "DelVar result",
    "LoadVar c",
    "DelVar c",
    "2-ary +",
    "StoreVar result",
    "Jump 402",
    "DelVar c",
    "Return",
    "Push PC(417)",
    "Builtin(bag$bmin)",
    "Jump 433",
    "Frame bmin bg",
    "DelVar result",
    "ReadonlyInc",
    "AtomicInc(lazy)",
    "LoadVar bg",
    "Push {:}",
    "2-ary !=",
    "Assert",
    "AtomicDec",
    "ReadonlyDec",
    "LoadVar bg",
    "DelVar bg",
    "1-ary keys",
    "1-ary min",
    "StoreVar result",
    "Return",
    "Push PC(436)",
    "Builtin(bag$bmax)",
    "Jump 461",
    "Frame bmax bg",
    "DelVar result",
    "ReadonlyInc",
    "AtomicInc(lazy)",
    "LoadVar bg",
    "Push {:}",
    "2-ary !=",
    "Assert",
    "AtomicDec",
    "ReadonlyDec",
    "LoadVar bg",
    "DelVar bg",
    "1-ary keys",
    "1-ary max",
    "StoreVar result",
    "Return",
    "Jump 461",
    "Frame bchoose bg",
    "DelVar result",
    "LoadVar bg",
    "DelVar bg",
    "1-ary keys",
    "Choose",
    "StoreVar result",
    "Return",
    "Push PC(464)",
    "Builtin(bag$add)",
    "Jump 490",
    "Frame add (bg, elt)",
    "DelVar result",
    "LoadVar bg",
    "DelVar bg",
    "StoreVar result",
    "LoadVar elt",
    "LoadVar result",
    "2-ary in",
    "JumpCond False 483",
    "Push ?result",
    "LoadVar elt",
    "DelVar elt",
    "Address",
    "Dup",
    "LoadVar [result]",
    "Push 1",
    "2-ary +",
    "StoreVar [result]",
    "Jump 489",
    "Push ?result",
    "LoadVar elt",
    "DelVar elt",
    "Address",
    "Push 1",
    "StoreVar [result]",
    "Return",
    "Push PC(493)",
    "Builtin(bag$remove)",
    "Jump 943",
    "Frame remove (bg, elt)",
    "DelVar result",
    "LoadVar bg",
    "DelVar bg",
    "StoreVar result",
    "LoadVar elt",
    "LoadVar result",
    "2-ary in",
    "JumpCond False 510",
    "Push ?result",
    "LoadVar elt",
    "Address",
    "Dup",
    "LoadVar [result]",
    "Push 1",
    "2-ary -",
    "StoreVar [result]",
    "LoadVar result",
    "LoadVar elt",
    "Apply",
    "Push 0",
    "2-ary <=",
    "JumpCond False 521",
    "Push ?result",
    "LoadVar elt",
    "DelVar elt",
    "Address",
    "DelVar [result]",
    "DelVar elt",
    "Return",
    "Jump 943",
    "Frame combinations (bg, k)",
    "DelVar result",
    "LoadVar k",
    "Push 0",
    "2-ary ==",
    "JumpCond False 535",
    "DelVar bg",
    "DelVar k",
    "Push { {:} }",
    "StoreVar result",
    "Jump 616",
    "Push PC(395)",
    "LoadVar bg",
    "Apply",
    "StoreVar n",
    "LoadVar k",
    "LoadVar n",
    "2-ary >",
    "JumpCond False 549",
    "DelVar bg",
    "DelVar k",
    "DelVar n",
    "Push {}",
    "StoreVar result",
    "Jump 616",
    "LoadVar k",
    "LoadVar n",
    "DelVar n",
    "2-ary ==",
    "JumpCond False 561",
    "DelVar k",
    "Push {}",
    "LoadVar bg",
    "DelVar bg",
    "2-ary SetAdd",
    "StoreVar result",
    "Jump 616",
    "Push PC(417)",
    "LoadVar bg",
    "Apply",
    "StoreVar hd",
    "Push PC(493)",
    "Push ()",
    "LoadVar bg",
    "DelVar bg",
    "2-ary ListAdd",
    "LoadVar hd",
    "2-ary ListAdd",
    "Apply",
    "StoreVar tl",
    "Push {}",
    "StoreVar $accu454",
    "Push PC(524)",
    "Push ()",
    "LoadVar tl",
    "2-ary ListAdd",
    "LoadVar k",
    "Push 1",
    "2-ary -",
    "2-ary ListAdd",
    "Apply",
    "Push 0",
    "Cut(x)",
    "JumpCond False 601",
    "LoadVar $accu454",
    "DelVar $accu454",
    "Push PC(464)",
    "Push ()",
    "LoadVar x",
    "DelVar x",
    "2-ary ListAdd",
    "LoadVar hd",
    "2-ary ListAdd",
    "Apply",
    "2-ary SetAdd",
    "StoreVar $accu454",
    "Jump 586",
    "DelVar hd",
    "DelVar x",
    "LoadVar $accu454",
    "DelVar $accu454",
    "Push PC(524)",
    "Push ()",
    "LoadVar tl",
    "DelVar tl",
    "2-ary ListAdd",
    "LoadVar k",
    "DelVar k",
    "2-ary ListAdd",
    "Apply",
    "2-ary |",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame atomic_load p",
    "DelVar result",
    "AtomicInc(lazy)",
    "LoadVar p",
    "DelVar p",
    "Load",
    "StoreVar result",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame atomic_store (p, v)",
    "AtomicInc(lazy)",
    "LoadVar p",
    "DelVar p",
    "LoadVar v",
    "DelVar v",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame tas lk",
    "DelVar result",
    "AtomicInc(lazy)",
    "LoadVar lk",
    "Load",
    "StoreVar result",
    "LoadVar lk",
    "DelVar lk",
    "Push True",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame cas (p, old, new)",
    "DelVar result",
    "AtomicInc(lazy)",
    "LoadVar p",
    "Load",
    "LoadVar old",
    "DelVar old",
    "2-ary ==",
    "StoreVar result",
    "LoadVar result",
    "JumpCond False 667",
    "LoadVar p",
    "DelVar p",
    "LoadVar new",
    "DelVar new",
    "Store",
    "DelVar new",
    "DelVar p",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame BinSema acquired",
    "DelVar result",
    "LoadVar acquired",
    "DelVar acquired",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame Lock ()",
    "DelVar result",
    "Push PC(672)",
    "Push False",
    "Apply",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame acquired binsema",
    "DelVar result",
    "LoadVar binsema",
    "DelVar binsema",
    "Load",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame acquire binsema",
    "AtomicInc(lazy)",
    "ReadonlyInc",
    "LoadVar binsema",
    "Load",
    "1-ary not",
    "JumpCond False 703",
    "Jump 706",
    "ReadonlyDec",
    "AtomicDec",
    "Jump 696",
    "ReadonlyDec",
    "LoadVar binsema",
    "DelVar binsema",
    "Push True",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame release binsema",
    "AtomicInc(lazy)",
    "ReadonlyInc",
    "AtomicInc(lazy)",
    "LoadVar binsema",
    "Load",
    "Assert",
    "AtomicDec",
    "ReadonlyDec",
    "LoadVar binsema",
    "DelVar binsema",
    "Push False",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame held binsema",
    "DelVar result",
    "LoadVar binsema",
    "DelVar binsema",
    "Load",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame Condition ()",
    "DelVar result",
    "Push PC(310)",
    "Push ()",
    "Apply",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame wait (c, lk)",
    "Push 0",
    "StoreVar cnt",
    "DelVar cnt",
    "Push ()",
    "Save",
    "Continue",
    "StoreVar ((), ctx)",
    "AtomicInc(lazy)",
    "Push PC(374)",
    "Push ()",
    "LoadVar c",
    "Load",
    "2-ary ListAdd",
    "LoadVar ctx",
    "2-ary ListAdd",
    "Apply",
    "StoreVar cnt",
    "LoadVar c",
    "Push PC(464)",
    "Push ()",
    "LoadVar c",
    "Load",
    "2-ary ListAdd",
    "LoadVar ctx",
    "2-ary ListAdd",
    "Apply",
    "Store",
    "LoadVar lk",
    "Push False",
    "Store",
    "AtomicDec",
    "AtomicInc(lazy)",
    "ReadonlyInc",
    "LoadVar lk",
    "Load",
    "1-ary not",
    "JumpCond False 795",
    "Push PC(374)",
    "Push ()",
    "LoadVar c",
    "Load",
    "2-ary ListAdd",
    "LoadVar ctx",
    "2-ary ListAdd",
    "Apply",
    "LoadVar cnt",
    "2-ary <=",
    "Jump 796",
    "Push False",
    "JumpCond False 801",
    "DelVar c",
    "DelVar cnt",
    "DelVar ctx",
    "Jump 804",
    "ReadonlyDec",
    "AtomicDec",
    "Jump 778",
    "ReadonlyDec",
    "LoadVar lk",
    "DelVar lk",
    "Push True",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame notify c",
    "AtomicInc(lazy)",
    "LoadVar c",
    "Load",
    "Push PC(310)",
    "Push ()",
    "Apply",
    "2-ary !=",
    "JumpCond False 835",
    "LoadVar c",
    "Push PC(493)",
    "Push ()",
    "LoadVar c",
    "Load",
    "2-ary ListAdd",
    "Push PC(453)",
    "LoadVar c",
    "DelVar c",
    "Load",
    "Apply",
    "2-ary ListAdd",
    "Apply",
    "Store",
    "DelVar c",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame notifyAll c",
    "AtomicInc(lazy)",
    "LoadVar c",
    "DelVar c",
    "Push PC(310)",
    "Push ()",
    "Apply",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame Semaphore cnt",
    "DelVar result",
    "LoadVar cnt",
    "DelVar cnt",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame P sema",
    "AtomicInc(lazy)",
    "ReadonlyInc",
    "LoadVar sema",
    "Load",
    "Push 0",
    "2-ary >",
    "JumpCond False 866",
    "Jump 869",
    "ReadonlyDec",
    "AtomicDec",
    "Jump 858",
    "ReadonlyDec",
    "LoadVar sema",
    "DelVar sema",
    "Dup",
    "Load",
    "Push 1",
    "2-ary -",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame V sema",
    "AtomicInc(lazy)",
    "LoadVar sema",
    "DelVar sema",
    "Dup",
    "Load",
    "Push 1",
    "2-ary +",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame Queue ()",
    "DelVar result",
    "Push ()",
    "StoreVar result",
    "Return",
    "Jump 943",
    "Frame get q",
    "DelVar result",
    "AtomicInc(lazy)",
    "ReadonlyInc",
    "LoadVar q",
    "Load",
    "Push ()",
    "2-ary !=",
    "JumpCond False 908",
    "Jump 911",
    "ReadonlyDec",
    "AtomicDec",
    "Jump 899",
    "ReadonlyDec",
    "Push PC(44)",
    "LoadVar q",
    "Load",
    "Apply",
    "StoreVar result",
    "LoadVar q",
    "Push PC(55)",
    "LoadVar q",
    "DelVar q",
    "Load",
    "Apply",
    "Store",
    "AtomicDec",
    "Return",
    "Jump 943",
    "Frame put (q, item)",
    "AtomicInc(lazy)",
    "LoadVar q",
    "Push PC(32)",
    "Push ()",
    "LoadVar q",
    "DelVar q",
    "Load",
    "2-ary ListAdd",
    "LoadVar item",
    "DelVar item",
    "2-ary ListAdd",
    "Apply",
    "Store",
    "AtomicDec",
    "Return",
    "Push ()",
    "Push PC(679)",
    "Push ()",
    "Apply",
    "2-ary ListAdd",
    "Push 5",
    "2-ary *",
    "Store forks",
    "Jump 995",
    "Frame diner which",
    "Push ()",
    "LoadVar which",
    "2-ary ListAdd",
    "LoadVar which",
    "DelVar which",
    "Push 1",
    "2-ary +",
    "Push 5",
    "2-ary %",
    "2-ary ListAdd",
    "StoreVar (left, right)",
    "Push { False, True }",
    "Choose",
    "JumpCond False 992",
    "Push PC(695)",
    "Push ?forks",
    "LoadVar left",
    "Address",
    "Apply",
    "Pop",
    "Push PC(695)",
    "Push ?forks",
    "LoadVar right",
    "Address",
    "Apply",
    "Pop",
    "Push PC(714)",
    "Push ?forks",
    "LoadVar left",
    "Address",
    "Apply",
    "Pop",
    "Push PC(714)",
    "Push ?forks",
    "LoadVar right",
    "Address",
    "Apply",
    "Pop",
    "Jump 964",
    "DelVar left",
    "DelVar right",
    "Return",
    "Push { 0, 1, 2, 3, 4 }",
    "Push 0",
    "Cut(i)",
    "JumpCond False 1005",
    "Push PC(952)",
    "LoadVar i",
    "DelVar i",
    "Push {:}",
    "Spawn",
    "Jump 997",
    "DelVar i",
    "Return",
    "DelVar result"
  ],
  "explain": [
    "start of method __init__",
    "set program counter to 52",
    "start of method subseq",
    "delete method variable result",
    "push constant ()",
    "pop a value and store in $accu3",
    "push the value of b",
    "delete method variable b",
    "push the value of e",
    "delete method variable e",
    "push constant 1",
    "pop 2 values and push the result of applying -",
    "pop 2 values and push the result of applying ..",
    "push constant 0",
    "get next element and assign to x",
    "pop a value and jump to 25 if the value is False",
    "push the value of $accu3",
    "delete method variable $accu3",
    "push the value of s",
    "push the value of x",
    "delete method variable x",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu3",
    "set program counter to 14",
    "delete method variable s",
    "delete method variable x",
    "push the value of $accu3",
    "delete method variable $accu3",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 52",
    "start of method append",
    "delete method variable result",
    "push the value of s",
    "delete method variable s",
    "push constant ()",
    "push the value of e",
    "delete method variable e",
    "pop 2 values and push the result of applying ListAdd",
    "pop 2 values and push the result of applying +",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 52",
    "start of method head",
    "delete method variable result",
    "push the value of s",
    "delete method variable s",
    "push constant 0",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "restore caller method state and push result",
    "push constant PC(55)",
    "top of stack is a built-in operation called list$tail",
    "set program counter to 371",
    "start of method tail",
    "delete method variable result",
    "push constant PC(2)",
    "push constant ()",
    "push the value of s",
    "pop 2 values and push the result of applying ListAdd",
    "push constant 1",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of s",
    "delete method variable s",
    "pop 1 value and push the result of applying len",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method sum",
    "delete method variable result",
    "push constant 0",
    "pop a value and store in result",
    "push the value of a",
    "delete method variable a",
    "push constant 0",
    "get next element and assign to v",
    "pop a value and jump to 87 if the value is False",
    "push the value of result",
    "delete method variable result",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying +",
    "pop a value and store in result",
    "set program counter to 78",
    "delete method variable v",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method set",
    "delete method variable result",
    "push constant {}",
    "pop a value and store in $accu71",
    "push the value of a",
    "delete method variable a",
    "push constant 0",
    "get next element and assign to v",
    "pop a value and jump to 106 if the value is False",
    "push the value of $accu71",
    "delete method variable $accu71",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying SetAdd",
    "pop a value and store in $accu71",
    "set program counter to 97",
    "delete method variable v",
    "push the value of $accu71",
    "delete method variable $accu71",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method list",
    "delete method variable result",
    "push constant ()",
    "pop a value and store in $accu87",
    "push the value of a",
    "delete method variable a",
    "push constant 0",
    "get next element and assign to v",
    "pop a value and jump to 128 if the value is False",
    "push the value of $accu87",
    "delete method variable $accu87",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu87",
    "set program counter to 119",
    "delete method variable v",
    "push the value of $accu87",
    "delete method variable $accu87",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method values",
    "delete method variable result",
    "push constant ()",
    "pop a value and store in $accu103",
    "push the value of d",
    "delete method variable d",
    "push constant 0",
    "get next element and assign to _:v",
    "delete method variable _",
    "pop a value and jump to 151 if the value is False",
    "push the value of $accu103",
    "delete method variable $accu103",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu103",
    "set program counter to 141",
    "delete method variable v",
    "push the value of $accu103",
    "delete method variable $accu103",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method items",
    "delete method variable result",
    "push constant ()",
    "pop a value and store in $accu119",
    "push the value of d",
    "delete method variable d",
    "push constant 0",
    "get next element and assign to k:v",
    "pop a value and jump to 178 if the value is False",
    "push the value of $accu119",
    "delete method variable $accu119",
    "push constant ()",
    "push the value of k",
    "delete method variable k",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying ListAdd",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu119",
    "set program counter to 164",
    "delete method variable k",
    "delete method variable v",
    "push the value of $accu119",
    "delete method variable $accu119",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method qsort",
    "delete method variable result",
    "push the value of a",
    "push constant ()",
    "pop 2 values and push the result of applying ==",
    "pop a value and jump to 195 if the value is False",
    "delete method variable a",
    "push constant ()",
    "pop a value and store in result",
    "set program counter to 265",
    "push constant ()",
    "push constant PC(44)",
    "push the value of a",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "push constant PC(55)",
    "push the value of a",
    "delete method variable a",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in (pivot, rest)",
    "push constant ()",
    "pop a value and store in $accu156",
    "push the value of rest",
    "push constant 0",
    "delete method variable v",
    "get next element and assign to v",
    "pop a value and jump to 224 if the value is False",
    "push the value of v",
    "push the value of pivot",
    "pop 2 values and push the result of applying <",
    "pop a value and jump to 210 if the value is False",
    "push the value of $accu156",
    "delete method variable $accu156",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu156",
    "set program counter to 210",
    "delete method variable v",
    "push the value of $accu156",
    "delete method variable $accu156",
    "pop a value and store in lower",
    "push constant ()",
    "pop a value and store in $accu173",
    "push the value of rest",
    "delete method variable rest",
    "push constant 0",
    "delete method variable v",
    "get next element and assign to v",
    "pop a value and jump to 247 if the value is False",
    "push the value of v",
    "push the value of pivot",
    "pop 2 values and push the result of applying >=",
    "pop a value and jump to 233 if the value is False",
    "push the value of $accu173",
    "delete method variable $accu173",
    "push the value of v",
    "delete method variable v",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu173",
    "set program counter to 233",
    "delete method variable v",
    "push the value of $accu173",
    "delete method variable $accu173",
    "pop a value and store in higher",
    "push constant PC(185)",
    "push the value of lower",
    "delete method variable lower",
    "pop a pc or dictionary f and an index i and push f(i)",
    "push constant ()",
    "push the value of pivot",
    "delete method variable pivot",
    "pop 2 values and push the result of applying ListAdd",
    "push constant PC(185)",
    "push the value of higher",
    "delete method variable higher",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 3 values and push the result of applying +",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method sorted",
    "delete method variable result",
    "push constant PC(185)",
    "push constant PC(112)",
    "push the value of d",
    "delete method variable d",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method reversed",
    "delete method variable result",
    "push the value of d",
    "pop 1 value and push the result of applying len",
    "pop a value and store in n",
    "push constant ()",
    "pop a value and store in $accu216",
    "push constant 1",
    "push the value of n",
    "pop 2 values and push the result of applying ..",
    "push constant 0",
    "get next element and assign to i",
    "pop a value and jump to 302 if the value is False",
    "push the value of $accu216",
    "delete method variable $accu216",
    "push the value of d",
    "push the value of n",
    "push the value of i",
    "delete method variable i",
    "pop 2 values and push the result of applying -",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in $accu216",
    "set program counter to 289",
    "delete method variable d",
    "delete method variable i",
    "delete method variable n",
    "push the value of $accu216",
    "delete method variable $accu216",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method empty",
    "delete method variable result",
    "push constant {:}",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method fromSet",
    "delete method variable result",
    "push constant {:}",
    "pop a value and store in $accu243",
    "push the value of s",
    "delete method variable s",
    "push constant 0",
    "get next element and assign to elt",
    "pop a value and jump to 333 if the value is False",
    "push the value of $accu243",
    "delete method variable $accu243",
    "push the value of elt",
    "delete method variable elt",
    "push constant 1",
    "pop 3 values and push the result of applying DictAdd",
    "pop a value and store in $accu243",
    "set program counter to 323",
    "delete method variable elt",
    "push the value of $accu243",
    "delete method variable $accu243",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 371",
    "start of method fromList",
    "delete method variable result",
    "push constant {:}",
    "pop a value and store in result",
    "push the value of a",
    "delete method variable a",
    "push constant 0",
    "get next element and assign to v",
    "pop a value and jump to 369 if the value is False",
    "push the value of v",
    "push the value of result",
    "pop 2 values and push the result of applying in",
    "pop a value and jump to 362 if the value is False",
    "push constant ?result",
    "push the value of v",
    "delete method variable v",
    "combine the top two values on the stack into an address and push the result",
    "push a copy of the top value on the stack",
    "pop the address of a method variable and push the value of that variable",
    "push constant 1",
    "pop 2 values and push the result of applying +",
    "pop a value and the address of a method variable and store the value at that address",
    "set program counter to 346",
    "push constant ?result",
    "push the value of v",
    "delete method variable v",
    "combine the top two values on the stack into an address and push the result",
    "push constant 1",
    "pop a value and the address of a method variable and store the value at that address",
    "set program counter to 346",
    "delete method variable v",
    "restore caller method state and push result",
    "push constant PC(374)",
    "top of stack is a built-in operation called bag$multiplicity",
    "set program counter to 392",
    "start of method multiplicity",
    "delete method variable result",
    "push the value of elt",
    "push the value of bg",
    "pop 2 values and push the result of applying in",
    "pop a value and jump to 387 if the value is False",
    "push the value of bg",
    "delete method variable bg",
    "push the value of elt",
    "delete method variable elt",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "set program counter to 391",
    "delete method variable bg",
    "delete method variable elt",
    "push constant 0",
    "pop a value and store in result",
    "restore caller method state and push result",
    "push constant PC(395)",
    "top of stack is a built-in operation called bag$size",
    "set program counter to 414",
    "start of method size",
    "delete method variable result",
    "push constant 0",
    "pop a value and store in result",
    "push the value of bg",
    "delete method variable bg",
    "push constant 0",
    "get next element and assign to _:c",
    "delete method variable _",
    "pop a value and jump to 412 if the value is False",
    "push the value of result",
    "delete method variable result",
    "push the value of c",
    "delete method variable c",
    "pop 2 values and push the result of applying +",
    "pop a value and store in result",
    "set program counter to 402",
    "delete method variable c",
    "restore caller method state and push result",
    "push constant PC(417)",
    "top of stack is a built-in operation called bag$bmin",
    "set program counter to 433",
    "start of method bmin",
    "delete method variable result",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of bg",
    "push constant {:}",
    "pop 2 values and push the result of applying !=",
    "pop a condition and raise exception if condition is false",
    "decrement atomic counter of context",
    "decrement readonly counter of context",
    "push the value of bg",
    "delete method variable bg",
    "pop 1 value and push the result of applying keys",
    "pop 1 value and push the result of applying min",
    "pop a value and store in result",
    "restore caller method state and push result",
    "push constant PC(436)",
    "top of stack is a built-in operation called bag$bmax",
    "set program counter to 461",
    "start of method bmax",
    "delete method variable result",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of bg",
    "push constant {:}",
    "pop 2 values and push the result of applying !=",
    "pop a condition and raise exception if condition is false",
    "decrement atomic counter of context",
    "decrement readonly counter of context",
    "push the value of bg",
    "delete method variable bg",
    "pop 1 value and push the result of applying keys",
    "pop 1 value and push the result of applying max",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 461",
    "start of method bchoose",
    "delete method variable result",
    "push the value of bg",
    "delete method variable bg",
    "pop 1 value and push the result of applying keys",
    "pop a set value and push one of its elements",
    "pop a value and store in result",
    "restore caller method state and push result",
    "push constant PC(464)",
    "top of stack is a built-in operation called bag$add",
    "set program counter to 490",
    "start of method add",
    "delete method variable result",
    "push the value of bg",
    "delete method variable bg",
    "pop a value and store in result",
    "push the value of elt",
    "push the value of result",
    "pop 2 values and push the result of applying in",
    "pop a value and jump to 483 if the value is False",
    "push constant ?result",
    "push the value of elt",
    "delete method variable elt",
    "combine the top two values on the stack into an address and push the result",
    "push a copy of the top value on the stack",
    "pop the address of a method variable and push the value of that variable",
    "push constant 1",
    "pop 2 values and push the result of applying +",
    "pop a value and the address of a method variable and store the value at that address",
    "set program counter to 489",
    "push constant ?result",
    "push the value of elt",
    "delete method variable elt",
    "combine the top two values on the stack into an address and push the result",
    "push constant 1",
    "pop a value and the address of a method variable and store the value at that address",
    "restore caller method state and push result",
    "push constant PC(493)",
    "top of stack is a built-in operation called bag$remove",
    "set program counter to 943",
    "start of method remove",
    "delete method variable result",
    "push the value of bg",
    "delete method variable bg",
    "pop a value and store in result",
    "push the value of elt",
    "push the value of result",
    "pop 2 values and push the result of applying in",
    "pop a value and jump to 510 if the value is False",
    "push constant ?result",
    "push the value of elt",
    "combine the top two values on the stack into an address and push the result",
    "push a copy of the top value on the stack",
    "pop the address of a method variable and push the value of that variable",
    "push constant 1",
    "pop 2 values and push the result of applying -",
    "pop a value and the address of a method variable and store the value at that address",
    "push the value of result",
    "push the value of elt",
    "pop a pc or dictionary f and an index i and push f(i)",
    "push constant 0",
    "pop 2 values and push the result of applying <=",
    "pop a value and jump to 521 if the value is False",
    "push constant ?result",
    "push the value of elt",
    "delete method variable elt",
    "combine the top two values on the stack into an address and push the result",
    "pop an address of a method variable and delete that variable",
    "delete method variable elt",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method combinations",
    "delete method variable result",
    "push the value of k",
    "push constant 0",
    "pop 2 values and push the result of applying ==",
    "pop a value and jump to 535 if the value is False",
    "delete method variable bg",
    "delete method variable k",
    "push constant { {:} }",
    "pop a value and store in result",
    "set program counter to 616",
    "push constant PC(395)",
    "push the value of bg",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in n",
    "push the value of k",
    "push the value of n",
    "pop 2 values and push the result of applying >",
    "pop a value and jump to 549 if the value is False",
    "delete method variable bg",
    "delete method variable k",
    "delete method variable n",
    "push constant {}",
    "pop a value and store in result",
    "set program counter to 616",
    "push the value of k",
    "push the value of n",
    "delete method variable n",
    "pop 2 values and push the result of applying ==",
    "pop a value and jump to 561 if the value is False",
    "delete method variable k",
    "push constant {}",
    "push the value of bg",
    "delete method variable bg",
    "pop 2 values and push the result of applying SetAdd",
    "pop a value and store in result",
    "set program counter to 616",
    "push constant PC(417)",
    "push the value of bg",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in hd",
    "push constant PC(493)",
    "push constant ()",
    "push the value of bg",
    "delete method variable bg",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of hd",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in tl",
    "push constant {}",
    "pop a value and store in $accu454",
    "push constant PC(524)",
    "push constant ()",
    "push the value of tl",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of k",
    "push constant 1",
    "pop 2 values and push the result of applying -",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "push constant 0",
    "get next element and assign to x",
    "pop a value and jump to 601 if the value is False",
    "push the value of $accu454",
    "delete method variable $accu454",
    "push constant PC(464)",
    "push constant ()",
    "push the value of x",
    "delete method variable x",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of hd",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying SetAdd",
    "pop a value and store in $accu454",
    "set program counter to 586",
    "delete method variable hd",
    "delete method variable x",
    "push the value of $accu454",
    "delete method variable $accu454",
    "push constant PC(524)",
    "push constant ()",
    "push the value of tl",
    "delete method variable tl",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of k",
    "delete method variable k",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying |",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method atomic_load",
    "delete method variable result",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of p",
    "delete method variable p",
    "pop an address and push the value at the address",
    "pop a value and store in result",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method atomic_store",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of p",
    "delete method variable p",
    "push the value of v",
    "delete method variable v",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method tas",
    "delete method variable result",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of lk",
    "pop an address and push the value at the address",
    "pop a value and store in result",
    "push the value of lk",
    "delete method variable lk",
    "push constant True",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method cas",
    "delete method variable result",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of p",
    "pop an address and push the value at the address",
    "push the value of old",
    "delete method variable old",
    "pop 2 values and push the result of applying ==",
    "pop a value and store in result",
    "push the value of result",
    "pop a value and jump to 667 if the value is False",
    "push the value of p",
    "delete method variable p",
    "push the value of new",
    "delete method variable new",
    "pop a value and an address and store the value at the address",
    "delete method variable new",
    "delete method variable p",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method BinSema",
    "delete method variable result",
    "push the value of acquired",
    "delete method variable acquired",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method Lock",
    "delete method variable result",
    "push constant PC(672)",
    "push constant False",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method acquired",
    "delete method variable result",
    "push the value of binsema",
    "delete method variable binsema",
    "pop an address and push the value at the address",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method acquire",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "push the value of binsema",
    "pop an address and push the value at the address",
    "pop 1 value and push the result of applying not",
    "pop a value and jump to 703 if the value is False",
    "set program counter to 706",
    "decrement readonly counter of context",
    "decrement atomic counter of context",
    "set program counter to 696",
    "decrement readonly counter of context",
    "push the value of binsema",
    "delete method variable binsema",
    "push constant True",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method release",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of binsema",
    "pop an address and push the value at the address",
    "pop a condition and raise exception if condition is false",
    "decrement atomic counter of context",
    "decrement readonly counter of context",
    "push the value of binsema",
    "delete method variable binsema",
    "push constant False",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method held",
    "delete method variable result",
    "push the value of binsema",
    "delete method variable binsema",
    "pop an address and push the value at the address",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method Condition",
    "delete method variable result",
    "push constant PC(310)",
    "push constant ()",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method wait",
    "push constant 0",
    "pop a value and store in cnt",
    "delete method variable cnt",
    "push constant ()",
    "pop a value and save context",
    "a no-op, must follow a Stop operation",
    "pop a value and store in ((), ctx)",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push constant PC(374)",
    "push constant ()",
    "push the value of c",
    "pop an address and push the value at the address",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of ctx",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in cnt",
    "push the value of c",
    "push constant PC(464)",
    "push constant ()",
    "push the value of c",
    "pop an address and push the value at the address",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of ctx",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and an address and store the value at the address",
    "push the value of lk",
    "push constant False",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "push the value of lk",
    "pop an address and push the value at the address",
    "pop 1 value and push the result of applying not",
    "pop a value and jump to 795 if the value is False",
    "push constant PC(374)",
    "push constant ()",
    "push the value of c",
    "pop an address and push the value at the address",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of ctx",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "push the value of cnt",
    "pop 2 values and push the result of applying <=",
    "set program counter to 796",
    "push constant False",
    "pop a value and jump to 801 if the value is False",
    "delete method variable c",
    "delete method variable cnt",
    "delete method variable ctx",
    "set program counter to 804",
    "decrement readonly counter of context",
    "decrement atomic counter of context",
    "set program counter to 778",
    "decrement readonly counter of context",
    "push the value of lk",
    "delete method variable lk",
    "push constant True",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method notify",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of c",
    "pop an address and push the value at the address",
    "push constant PC(310)",
    "push constant ()",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying !=",
    "pop a value and jump to 835 if the value is False",
    "push the value of c",
    "push constant PC(493)",
    "push constant ()",
    "push the value of c",
    "pop an address and push the value at the address",
    "pop 2 values and push the result of applying ListAdd",
    "push constant PC(453)",
    "push the value of c",
    "delete method variable c",
    "pop an address and push the value at the address",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and an address and store the value at the address",
    "delete method variable c",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method notifyAll",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of c",
    "delete method variable c",
    "push constant PC(310)",
    "push constant ()",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method Semaphore",
    "delete method variable result",
    "push the value of cnt",
    "delete method variable cnt",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method P",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "push the value of sema",
    "pop an address and push the value at the address",
    "push constant 0",
    "pop 2 values and push the result of applying >",
    "pop a value and jump to 866 if the value is False",
    "set program counter to 869",
    "decrement readonly counter of context",
    "decrement atomic counter of context",
    "set program counter to 858",
    "decrement readonly counter of context",
    "push the value of sema",
    "delete method variable sema",
    "push a copy of the top value on the stack",
    "pop an address and push the value at the address",
    "push constant 1",
    "pop 2 values and push the result of applying -",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method V",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of sema",
    "delete method variable sema",
    "push a copy of the top value on the stack",
    "pop an address and push the value at the address",
    "push constant 1",
    "pop 2 values and push the result of applying +",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method Queue",
    "delete method variable result",
    "push constant ()",
    "pop a value and store in result",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method get",
    "delete method variable result",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "push the value of q",
    "pop an address and push the value at the address",
    "push constant ()",
    "pop 2 values and push the result of applying !=",
    "pop a value and jump to 908 if the value is False",
    "set program counter to 911",
    "decrement readonly counter of context",
    "decrement atomic counter of context",
    "set program counter to 899",
    "decrement readonly counter of context",
    "push constant PC(44)",
    "push the value of q",
    "pop an address and push the value at the address",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and store in result",
    "push the value of q",
    "push constant PC(55)",
    "push the value of q",
    "delete method variable q",
    "pop an address and push the value at the address",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "set program counter to 943",
    "start of method put",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push the value of q",
    "push constant PC(32)",
    "push constant ()",
    "push the value of q",
    "delete method variable q",
    "pop an address and push the value at the address",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of item",
    "delete method variable item",
    "pop 2 values and push the result of applying ListAdd",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop a value and an address and store the value at the address",
    "decrement atomic counter of context",
    "restore caller method state and push result",
    "push constant ()",
    "push constant PC(679)",
    "push constant ()",
    "pop a pc or dictionary f and an index i and push f(i)",
    "pop 2 values and push the result of applying ListAdd",
    "push constant 5",
    "pop 2 values and push the result of applying *",
    "pop a value and store it in shared variable forks",
    "set program counter to 995",
    "start of method diner",
    "push constant ()",
    "push the value of which",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of which",
    "delete method variable which",
    "push constant 1",
    "pop 2 values and push the result of applying +",
    "push constant 5",
    "pop 2 values and push the result of applying %",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in (left, right)",
    "push constant { False, True }",
    "pop a set value and push one of its elements",
    "pop a value and jump to 992 if the value is False",
    "push constant PC(695)",
    "push constant ?forks",
    "push the value of left",
    "combine the top two values on the stack into an address and push the result",
    "pop a pc or dictionary f and an index i and push f(i)",
    "discard the top value on the stack",
    "push constant PC(695)",
    "push constant ?forks",
    "push the value of right",
    "combine the top two values on the stack into an address and push the result",
    "pop a pc or dictionary f and an index i and push f(i)",
    "discard the top value on the stack",
    "push constant PC(714)",
    "push constant ?forks",
    "push the value of left",
    "combine the top two values on the stack into an address and push the result",
    "pop a pc or dictionary f and an index i and push f(i)",
    "discard the top value on the stack",
    "push constant PC(714)",
    "push constant ?forks",
    "push the value of right",
    "combine the top two values on the stack into an address and push the result",
    "pop a pc or dictionary f and an index i and push f(i)",
    "discard the top value on the stack",
    "set program counter to 964",
    "delete method variable left",
    "delete method variable right",
    "restore caller method state and push result",
    "push constant { 0, 1, 2, 3, 4 }",
    "push constant 0",
    "get next element and assign to i",
    "pop a value and jump to 1005 if the value is False",
    "push constant PC(952)",
    "push the value of i",
    "delete method variable i",
    "push constant {:}",
    "pop thread-local state, argument, and pc and spawn a new thread",
    "set program counter to 997",
    "delete method variable i",
    "restore caller method state and push result",
    "delete method variable result"
  ],
  "locations": {
    "398": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "24", "column": "5", "endline": "24", "endcolumn": "12", "code": "    result = 0" },
    "813": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "16", "endline": "58", "endcolumn": "1", "code": "    atomically if !c != bag.empty():" },
    "115": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "209": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "193": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "40", "column": "9", "endline": "40", "endcolumn": "16", "code": "        result = []" },
    "895": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "73", "column": "5", "endline": "73", "endcolumn": "12", "code": "    result = []" },
    "72": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "17", "column": "14", "endline": "17", "endcolumn": "14", "code": "    result = 0" },
    "829": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "42", "endline": "57", "endcolumn": "42", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "143": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "307": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "9", "endline": "54", "endcolumn": "16", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "263": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "22", "endline": "45", "endcolumn": "60", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "845": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "21", "endline": "60", "endcolumn": "31", "code": "    atomically !c = bag.empty()" },
    "590": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "34", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "43": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "8", "column": "1", "endline": "8", "endcolumn": "3", "code": "def head(s):" },
    "879": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "69", "column": "1", "endline": "69", "endcolumn": "3", "code": "def V(sema):" },
    "835": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "16", "endline": "58", "endcolumn": "1", "code": "    atomically if !c != bag.empty():" },
    "50": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "5", "endline": "9", "endcolumn": "12", "code": "    result = s[0]" },
    "993": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "7", "column": "1", "endline": "16", "endcolumn": "1", "code": "def diner(which):" },
    "540": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "63", "column": "20", "endline": "63", "endcolumn": "20", "code": "            if k > n:" },
    "665": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "19", "column": "18", "endline": "19", "endcolumn": "20", "code": "            !p = new" },
    "259": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "48", "endline": "45", "endcolumn": "52", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "705": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "33", "column": "1", "endline": "33", "endcolumn": "1", "code": "" },
    "889": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "943": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "10", "endline": "5", "endcolumn": "16", "code": "forks = [Lock(),] * N" },
    "530": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "60", "column": "20", "endline": "60", "endcolumn": "22", "code": "        result = { {:} }" },
    "188": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "13", "endline": "39", "endcolumn": "14", "code": "    if a == []:" },
    "942": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "80", "column": "1", "endline": "82", "endcolumn": "1", "code": "def put(q, item):" },
    "454": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "26", "endline": "39", "endcolumn": "27", "code": "    result = choose(keys(bg))" },
    "357": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "26", "code": "            result[v] += 1" },
    "755": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "19", "endline": "49", "endcolumn": "34", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "650": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "15", "column": "1", "endline": "15", "endcolumn": "3", "code": "def cas(p, old, new):" },
    "932": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "34", "endline": "81", "endcolumn": "34", "code": "    atomically !q = list.append(!q, item)" },
    "354": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "20", "endline": "11", "endcolumn": "20", "code": "            result[v] += 1" },
    "338": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "7", "column": "1", "endline": "7", "endcolumn": "3", "code": "def fromList(a):" },
    "933": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "34", "endline": "81", "endcolumn": "34", "code": "    atomically !q = list.append(!q, item)" },
    "600": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "74", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "878": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "65", "column": "1", "endline": "68", "endcolumn": "1", "code": "def P(sema):" },
    "418": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "348": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "10", "column": "12", "endline": "10", "endcolumn": "12", "code": "        if v in result:" },
    "304": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "992": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "7", "column": "1", "endline": "16", "endcolumn": "1", "code": "def diner(which):" },
    "888": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "23", "code": "    atomically !sema += 1" },
    "404": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "5", "endline": "27", "endcolumn": "1", "code": "    for _:c in bg:" },
    "62": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "21", "endline": "13", "endcolumn": "32", "code": "    result = subseq(s, 1, len(s))" },
    "419": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "914": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "77", "column": "28", "endline": "77", "endcolumn": "29", "code": "        result = list.head(!q)" },
    "828": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "42", "endline": "57", "endcolumn": "42", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "42": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "5", "column": "1", "endline": "7", "endcolumn": "1", "code": "def append(s, e):" },
    "754": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "48", "column": "9", "endline": "51", "endcolumn": "24", "code": "        atomically:" },
    "403": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "5", "endline": "27", "endcolumn": "1", "code": "    for _:c in bg:" },
    "128": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "114": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "453": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "38", "column": "1", "endline": "40", "endcolumn": "1", "code": "def bchoose(bg):" },
    "566": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "51", "endline": "68", "endcolumn": "56", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "178": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "931": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "33", "endline": "81", "endcolumn": "40", "code": "    atomically !q = list.append(!q, item)" },
    "591": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "36", "endline": "69", "endcolumn": "40", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "564": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "17", "endline": "71", "endcolumn": "1", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "704": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "915": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "77", "column": "18", "endline": "77", "endcolumn": "30", "code": "        result = list.head(!q)" },
    "768": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "26", "endline": "50", "endcolumn": "27", "code": "            !c = bag.add(!c, ctx)" },
    "707": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "32", "column": "10", "endline": "32", "endcolumn": "16", "code": "        !binsema = True" },
    "208": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "34", "endline": "43", "endcolumn": "37", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "565": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "44", "endline": "68", "endcolumn": "49", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "531": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "60", "column": "20", "endline": "60", "endcolumn": "22", "code": "        result = { {:} }" },
    "757": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "37", "endline": "49", "endcolumn": "37", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "258": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "38", "endline": "45", "endcolumn": "43", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "541": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "63", "column": "16", "endline": "63", "endcolumn": "20", "code": "            if k > n:" },
    "452": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "38", "column": "1", "endline": "38", "endcolumn": "3", "code": "def bchoose(bg):" },
    "847": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "16", "endline": "60", "endcolumn": "31", "code": "    atomically !c = bag.empty()" },
    "897": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "75", "column": "1", "endline": "75", "endcolumn": "3", "code": "def get(q):" },
    "509": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "22", "code": "        result[elt] -= 1" },
    "811": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "55", "column": "1", "endline": "55", "endcolumn": "3", "code": "def notify(c):" },
    "559": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "17", "endline": "66", "endcolumn": "24", "code": "                result = { bg }" },
    "2": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "2", "column": "1", "endline": "4", "endcolumn": "1", "code": "def subseq(s, b, e):" },
    "837": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "55", "column": "1", "endline": "58", "endcolumn": "1", "code": "def notify(c):" },
    "1003": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "18", "column": "5", "endline": "18", "endcolumn": "18", "code": "    spawn diner(i)" },
    "834": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "9", "endline": "57", "endcolumn": "10", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "51": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "8", "column": "1", "endline": "10", "endcolumn": "1", "code": "def head(s):" },
    "3": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "894": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "73", "column": "14", "endline": "73", "endcolumn": "15", "code": "    result = []" },
    "12": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "31", "endline": "3", "endcolumn": "36", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "567": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "51", "endline": "68", "endcolumn": "52", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "844": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "30", "endline": "60", "endcolumn": "31", "code": "    atomically !c = bag.empty()" },
    "830": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "41", "endline": "57", "endcolumn": "42", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "568": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "51", "endline": "68", "endcolumn": "52", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "56": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "14", "endline": "13", "endcolumn": "19", "code": "    result = subseq(s, 1, len(s))" },
    "896": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "72", "column": "1", "endline": "74", "endcolumn": "1", "code": "def Queue():" },
    "840": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "16", "endline": "60", "endcolumn": "31", "code": "    atomically !c = bag.empty()" },
    "890": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "69", "column": "1", "endline": "71", "endcolumn": "5", "code": "def V(sema):" },
    "846": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "16", "endline": "60", "endcolumn": "17", "code": "    atomically !c = bag.empty()" },
    "812": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "55", "column": "1", "endline": "58", "endcolumn": "1", "code": "def notify(c):" },
    "836": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "16", "endline": "58", "endcolumn": "1", "code": "    atomically if !c != bag.empty():" },
    "709": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "32", "column": "20", "endline": "32", "endcolumn": "23", "code": "        !binsema = True" },
    "450": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "36", "column": "5", "endline": "36", "endcolumn": "12", "code": "    result = max(keys(bg))" },
    "997": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "17", "column": "1", "endline": "19", "endcolumn": "1", "code": "for i in {0..N-1}:" },
    "71": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "16", "column": "1", "endline": "21", "endcolumn": "46", "code": "def sum(a):" },
    "361": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "10", "column": "9", "endline": "14", "endcolumn": "1", "code": "        if v in result:" },
    "9": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "34", "endline": "3", "endcolumn": "34", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "533": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "60", "column": "9", "endline": "60", "endcolumn": "16", "code": "        result = { {:} }" },
    "457": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "21", "endline": "39", "endcolumn": "28", "code": "    result = choose(keys(bg))" },
    "400": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "16", "endline": "25", "endcolumn": "17", "code": "    for _:c in bg:" },
    "937": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "37", "endline": "81", "endcolumn": "40", "code": "    atomically !q = list.append(!q, item)" },
    "407": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "19", "endline": "26", "endcolumn": "19", "code": "        result += c" },
    "947": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "10", "endline": "5", "endcolumn": "16", "code": "forks = [Lock(),] * N" },
    "618": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "4", "column": "1", "endline": "6", "endcolumn": "1", "code": "def atomic_load(p):" },
    "119": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "111": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "26", "column": "1", "endline": "26", "endcolumn": "3", "code": "def list(a):" },
    "507": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "24", "endline": "53", "endcolumn": "24", "code": "        result[elt] -= 1" },
    "543": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "64", "column": "26", "endline": "64", "endcolumn": "27", "code": "                result = {}" },
    "759": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "36", "endline": "49", "endcolumn": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "936": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "37", "endline": "81", "endcolumn": "40", "code": "    atomically !q = list.append(!q, item)" },
    "593": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "36", "endline": "69", "endcolumn": "36", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "756": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "36", "endline": "49", "endcolumn": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "401": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "5", "endline": "27", "endcolumn": "1", "code": "    for _:c in bg:" },
    "990": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "13", "endline": "14", "endcolumn": "34", "code": "            release(?forks[right])" },
    "946": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "10", "endline": "5", "endcolumn": "15", "code": "forks = [Lock(),] * N" },
    "41": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "5", "endline": "6", "endcolumn": "12", "code": "    result = s + [e,]" },
    "706": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "264": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "13", "endline": "45", "endcolumn": "20", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "532": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "60", "column": "20", "endline": "60", "endcolumn": "22", "code": "        result = { {:} }" },
    "996": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "17", "column": "1", "endline": "19", "endcolumn": "1", "code": "for i in {0..N-1}:" },
    "369": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "7", "column": "1", "endline": "14", "endcolumn": "1", "code": "def fromList(a):" },
    "366": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "25", "endline": "13", "endcolumn": "25", "code": "            result[v] = 1" },
    "8": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "34", "endline": "3", "endcolumn": "34", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "604": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "542": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "63", "column": "13", "endline": "63", "endcolumn": "14", "code": "            if k > n:" },
    "654": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "19", "endline": "17", "endcolumn": "19", "code": "        result = !p == old" },
    "451": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "34", "column": "1", "endline": "37", "endcolumn": "1", "code": "def bmax(bg):" },
    "266": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "48", "column": "1", "endline": "48", "endcolumn": "3", "code": "def sorted(d):" },
    "592": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "36", "endline": "69", "endcolumn": "36", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "557": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "28", "endline": "66", "endcolumn": "29", "code": "                result = { bg }" },
    "61": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "24", "endline": "13", "endcolumn": "24", "code": "    result = subseq(s, 1, len(s))" },
    "606": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "48", "endline": "70", "endcolumn": "52", "code": "                                | combinations(tl, k)" },
    "13": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "558": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "28", "endline": "66", "endcolumn": "29", "code": "                result = { bg }" },
    "607": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "48", "endline": "70", "endcolumn": "49", "code": "                                | combinations(tl, k)" },
    "656": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "24", "endline": "17", "endcolumn": "26", "code": "        result = !p == old" },
    "508": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "24", "code": "        result[elt] -= 1" },
    "657": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "24", "endline": "17", "endcolumn": "26", "code": "        result = !p == old" },
    "930": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "21", "endline": "81", "endcolumn": "31", "code": "    atomically !q = list.append(!q, item)" },
    "267": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "48", "column": "1", "endline": "51", "endcolumn": "25", "code": "def sorted(d):" },
    "940": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "16", "endline": "81", "endcolumn": "17", "code": "    atomically !q = list.append(!q, item)" },
    "998": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "17", "column": "1", "endline": "19", "endcolumn": "1", "code": "for i in {0..N-1}:" },
    "602": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "402": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "5", "endline": "27", "endcolumn": "1", "code": "    for _:c in bg:" },
    "265": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "38", "column": "1", "endline": "47", "endcolumn": "23", "code": "def qsort(a):" },
    "384": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "18", "endline": "18", "endcolumn": "24", "code": "        result = bg[elt]" },
    "229": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "991": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "16", "column": "1", "endline": "16", "endcolumn": "1", "code": "" },
    "938": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "33", "endline": "81", "endcolumn": "40", "code": "    atomically !q = list.append(!q, item)" },
    "163": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "363": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "20", "endline": "13", "endcolumn": "20", "code": "            result[v] = 1" },
    "941": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "16", "endline": "81", "endcolumn": "41", "code": "    atomically !q = list.append(!q, item)" },
    "374": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "16", "column": "1", "endline": "21", "endcolumn": "1", "code": "def multiplicity(bg, elt):" },
    "948": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "21", "endline": "5", "endcolumn": "21", "code": "forks = [Lock(),] * N" },
    "261": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "54", "endline": "45", "endcolumn": "59", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "959": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "32", "endline": "8", "endcolumn": "40", "code": "    let left, right = (which, (which + 1) % N):" },
    "405": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "9", "endline": "26", "endcolumn": "19", "code": "        result += c" },
    "324": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "112": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "26", "column": "1", "endline": "29", "endcolumn": "45", "code": "def list(a):" },
    "974": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "22", "endline": "11", "endcolumn": "26", "code": "            acquire(?forks[right])" },
    "702": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "33", "column": "1", "endline": "33", "endcolumn": "1", "code": "" },
    "601": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "506": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "24", "code": "        result[elt] -= 1" },
    "327": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "18", "code": "    result = { elt:1 for elt in s }" },
    "909": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "455": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "26", "endline": "39", "endcolumn": "27", "code": "    result = choose(keys(bg))" },
    "52": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "11", "column": "9", "endline": "11", "endcolumn": "12", "code": "builtin tail \"list$tail\"" },
    "924": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "819": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "19", "endline": "56", "endcolumn": "35", "code": "    atomically if !c != bag.empty():" },
    "818": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "25", "endline": "56", "endcolumn": "35", "code": "    atomically if !c != bag.empty():" },
    "752": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "47", "column": "19", "endline": "47", "endcolumn": "24", "code": "    let (), ctx = save():" },
    "651": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "15", "column": "1", "endline": "20", "endcolumn": "1", "code": "def cas(p, old, new):" },
    "63": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "31", "endline": "13", "endcolumn": "31", "code": "    result = subseq(s, 1, len(s))" },
    "619": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "360": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "24", "code": "            result[v] += 1" },
    "73": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "17", "column": "14", "endline": "17", "endcolumn": "14", "code": "    result = 0" },
    "11": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "34", "endline": "3", "endcolumn": "36", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "556": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "28", "endline": "66", "endcolumn": "29", "code": "                result = { bg }" },
    "377": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "15", "endline": "17", "endcolumn": "16", "code": "    if elt in bg:" },
    "40": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "14", "endline": "6", "endcolumn": "21", "code": "    result = s + [e,]" },
    "701": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "158": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "53": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "11", "column": "1", "endline": "11", "endcolumn": "24", "code": "builtin tail \"list$tail\"" },
    "387": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "20", "column": "18", "endline": "20", "endcolumn": "18", "code": "        result = 0" },
    "228": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "262": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "48", "endline": "45", "endcolumn": "60", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "10": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "36", "endline": "3", "endcolumn": "36", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "925": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "75", "column": "1", "endline": "79", "endcolumn": "1", "code": "def get(q):" },
    "278": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "52", "column": "1", "endline": "55", "endcolumn": "1", "code": "def reversed(d):" },
    "703": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "555": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "28", "endline": "66", "endcolumn": "29", "code": "                result = { bg }" },
    "110": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "22", "column": "1", "endline": "25", "endcolumn": "35", "code": "def set(a):" },
    "653": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "16", "column": "5", "endline": "20", "endcolumn": "1", "code": "    atomically:" },
    "288": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "751": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "47", "column": "19", "endline": "47", "endcolumn": "24", "code": "    let (), ctx = save():" },
    "505": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "24", "code": "        result[elt] -= 1" },
    "70": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "16", "column": "1", "endline": "16", "endcolumn": "3", "code": "def sum(a):" },
    "984": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "33", "code": "            release(?forks[left])" },
    "116": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "27", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "603": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "318": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "375": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "8", "endline": "17", "endcolumn": "10", "code": "    if elt in bg:" },
    "362": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "18", "code": "            result[v] = 1" },
    "289": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "406": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "9", "endline": "26", "endcolumn": "19", "code": "        result += c" },
    "798": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "54", "column": "1", "endline": "54", "endcolumn": "1", "code": "" },
    "279": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "53", "column": "17", "endline": "53", "endcolumn": "17", "code": "    let n = len(d):" },
    "753": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "47", "column": "5", "endline": "54", "endcolumn": "1", "code": "    let (), ctx = save():" },
    "695": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "30", "column": "1", "endline": "33", "endcolumn": "1", "code": "def acquire(binsema):" },
    "748": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "46", "column": "5", "endline": "46", "endcolumn": "15", "code": "    var cnt = 0" },
    "456": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "26", "endline": "39", "endcolumn": "27", "code": "    result = choose(keys(bg))" },
    "325": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "975": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "28", "endline": "11", "endcolumn": "32", "code": "            acquire(?forks[right])" },
    "645": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "13", "column": "10", "endline": "13", "endcolumn": "11", "code": "        !lk = True" },
    "750": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "47", "column": "23", "endline": "47", "endcolumn": "24", "code": "    let (), ctx = save():" },
    "60": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "21", "endline": "13", "endcolumn": "32", "code": "    result = subseq(s, 1, len(s))" },
    "385": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "9", "endline": "18", "endcolumn": "16", "code": "        result = bg[elt]" },
    "260": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "54", "endline": "45", "endcolumn": "59", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "652": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "16", "column": "5", "endline": "20", "endcolumn": "1", "code": "    atomically:" },
    "108": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "985": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "13", "endline": "14", "endcolumn": "19", "code": "            release(?forks[right])" },
    "635": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "16", "endline": "8", "endcolumn": "21", "code": "    atomically !p = v" },
    "117": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "27", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "700": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "21", "endline": "31", "endcolumn": "32", "code": "    atomically when not !binsema:" },
    "504": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "19", "code": "        result[elt] -= 1" },
    "961": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "31", "endline": "8", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "681": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "25", "column": "14", "endline": "25", "endcolumn": "20", "code": "    result = BinSema(False)" },
    "343": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "14", "code": "    for v in a:" },
    "554": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "66", "column": "28", "endline": "66", "endcolumn": "29", "code": "                result = { bg }" },
    "711": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "976": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "22", "endline": "11", "endcolumn": "33", "code": "            acquire(?forks[right])" },
    "694": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "30", "column": "1", "endline": "30", "endcolumn": "3", "code": "def acquire(binsema):" },
    "777": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "48", "column": "9", "endline": "51", "endcolumn": "24", "code": "        atomically:" },
    "762": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "19", "endline": "49", "endcolumn": "43", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "194": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "5", "endline": "47", "endcolumn": "23", "code": "    if a == []:" },
    "67": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "14", "endline": "13", "endcolumn": "33", "code": "    result = subseq(s, 1, len(s))" },
    "462": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "41", "column": "1", "endline": "41", "endcolumn": "21", "code": "builtin add \"bag$add\"" },
    "20": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "18", "endline": "3", "endcolumn": "18", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "738": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "42", "column": "1", "endline": "44", "endcolumn": "1", "code": "def Condition():" },
    "547": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "64", "column": "17", "endline": "64", "endcolumn": "24", "code": "                result = {}" },
    "822": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "14", "endline": "57", "endcolumn": "23", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "814": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "20", "endline": "56", "endcolumn": "20", "code": "    atomically if !c != bag.empty():" },
    "286": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "41", "endline": "54", "endcolumn": "41", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "376": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "8", "endline": "17", "endcolumn": "10", "code": "    if elt in bg:" },
    "634": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "16", "endline": "8", "endcolumn": "17", "code": "    atomically !p = v" },
    "268": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "14", "endline": "49", "endcolumn": "18", "code": "    result = qsort(list(d))" },
    "511": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "15", "endline": "54", "endcolumn": "17", "code": "    if result[elt] <= 0:" },
    "109": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "5", "endline": "23", "endcolumn": "12", "code": "    result = { v for v in a }" },
    "227": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "9", "endline": "47", "endcolumn": "23", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "126": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "226": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "579": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "65", "endline": "69", "endcolumn": "73", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "235": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "621": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "26", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "287": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "38", "endline": "54", "endcolumn": "41", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "449": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "36", "column": "14", "endline": "36", "endcolumn": "26", "code": "    result = max(keys(bg))" },
    "463": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "42", "column": "1", "endline": "42", "endcolumn": "3", "code": "def add(bg, elt):" },
    "4": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "1007": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "1", "column": "1", "endline": "19", "endcolumn": "1", "code": "from synch import Lock, acquire, release" },
    "475": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "16", "endline": "45", "endcolumn": "18", "code": "        result[elt] += 1" },
    "295": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "24", "endline": "54", "endcolumn": "24", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "134": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "30", "column": "1", "endline": "33", "endcolumn": "23", "code": "def values(d):" },
    "447": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "36", "column": "23", "endline": "36", "endcolumn": "24", "code": "    result = max(keys(bg))" },
    "697": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "476": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "19", "code": "        result[elt] += 1" },
    "292": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "371": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "15", "column": "9", "endline": "15", "endcolumn": "20", "code": "builtin multiplicity \"bag$multiplicity\"" },
    "680": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "25", "column": "14", "endline": "25", "endcolumn": "20", "code": "    result = BinSema(False)" },
    "30": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "2", "column": "1", "endline": "4", "endcolumn": "1", "code": "def subseq(s, b, e):" },
    "201": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "43", "endline": "42", "endcolumn": "43", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "763": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "13", "endline": "49", "endcolumn": "17", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "962": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "24", "endline": "8", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "186": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "8", "endline": "39", "endcolumn": "8", "code": "    if a == []:" },
    "608": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "48", "endline": "70", "endcolumn": "49", "code": "                                | combinations(tl, k)" },
    "7": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "31", "endline": "3", "endcolumn": "31", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "342": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "8", "column": "5", "endline": "8", "endcolumn": "12", "code": "    result = {:}" },
    "620": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "866": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "340": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "8", "column": "14", "endline": "8", "endcolumn": "16", "code": "    result = {:}" },
    "127": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "27", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "881": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "180": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "860": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "22", "endline": "66", "endcolumn": "25", "code": "    atomically when !sema > 0:" },
    "609": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "48", "endline": "70", "endcolumn": "52", "code": "                                | combinations(tl, k)" },
    "224": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "882": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "17", "endline": "70", "endcolumn": "20", "code": "    atomically !sema += 1" },
    "187": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "8", "endline": "39", "endcolumn": "8", "code": "    if a == []:" },
    "232": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "833": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "14", "endline": "57", "endcolumn": "44", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "195": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "29", "endline": "42", "endcolumn": "44", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "908": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "200": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "38", "endline": "42", "endcolumn": "41", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "113": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "821": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "10", "endline": "57", "endcolumn": "10", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "815": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "19", "endline": "56", "endcolumn": "20", "code": "    atomically if !c != bag.empty():" },
    "120": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "6": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "31", "endline": "3", "endcolumn": "31", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "233": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "893": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "73", "column": "14", "endline": "73", "endcolumn": "15", "code": "    result = []" },
    "867": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "949": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "9", "endline": "5", "endcolumn": "21", "code": "forks = [Lock(),] * N" },
    "935": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "33", "endline": "81", "endcolumn": "40", "code": "    atomically !q = list.append(!q, item)" },
    "775": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "51", "column": "19", "endline": "51", "endcolumn": "23", "code": "            !lk = False" },
    "655": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "18", "endline": "17", "endcolumn": "19", "code": "        result = !p == old" },
    "464": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "42", "column": "1", "endline": "48", "endcolumn": "1", "code": "def add(bg, elt):" },
    "627": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "7", "column": "1", "endline": "7", "endcolumn": "3", "code": "def atomic_store(p, v):" },
    "865": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "68", "column": "1", "endline": "68", "endcolumn": "1", "code": "" },
    "293": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "20", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "713": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "34", "column": "1", "endline": "34", "endcolumn": "3", "code": "def release(binsema):" },
    "370": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "7", "column": "1", "endline": "14", "endcolumn": "1", "code": "def fromList(a):" },
    "1005": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "1", "column": "1", "endline": "19", "endcolumn": "1", "code": "from synch import Lock, acquire, release" },
    "545": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "64", "column": "26", "endline": "64", "endcolumn": "27", "code": "                result = {}" },
    "687": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "27", "column": "1", "endline": "29", "endcolumn": "1", "code": "def acquired(binsema):" },
    "963": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "5", "endline": "16", "endcolumn": "1", "code": "    let left, right = (which, (which + 1) % N):" },
    "368": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "14", "column": "1", "endline": "14", "endcolumn": "1", "code": "" },
    "211": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "513": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "23", "endline": "54", "endcolumn": "23", "code": "    if result[elt] <= 0:" },
    "446": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "36", "column": "23", "endline": "36", "endcolumn": "24", "code": "    result = max(keys(bg))" },
    "85": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "9", "endline": "19", "endcolumn": "17", "code": "        result += v" },
    "135": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "823": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "25", "endline": "57", "endcolumn": "43", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "779": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "478": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "24", "code": "        result[elt] += 1" },
    "181": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "234": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "883": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "17", "endline": "70", "endcolumn": "20", "code": "    atomically !sema += 1" },
    "995": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "17", "column": "11", "endline": "17", "endcolumn": "16", "code": "for i in {0..N-1}:" },
    "341": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "8", "column": "14", "endline": "8", "endcolumn": "16", "code": "    result = {:}" },
    "47": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "14", "code": "    result = s[0]" },
    "548": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "63", "column": "13", "endline": "71", "endcolumn": "1", "code": "            if k > n:" },
    "510": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "8", "endline": "54", "endcolumn": "13", "code": "    if result[elt] <= 0:" },
    "269": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "14", "endline": "49", "endcolumn": "18", "code": "    result = qsort(list(d))" },
    "710": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "32", "column": "9", "endline": "32", "endcolumn": "16", "code": "        !binsema = True" },
    "17": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "864": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "624": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "23", "code": "    atomically result = !p" },
    "960": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "45", "endline": "8", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "774": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "51", "column": "14", "endline": "51", "endcolumn": "15", "code": "            !lk = False" },
    "686": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "27", "column": "1", "endline": "27", "endcolumn": "3", "code": "def acquired(binsema):" },
    "546": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "64", "column": "26", "endline": "64", "endcolumn": "27", "code": "                result = {}" },
    "544": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "64", "column": "26", "endline": "64", "endcolumn": "27", "code": "                result = {}" },
    "139": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "29", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "77": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "18", "column": "5", "endline": "21", "endcolumn": "46", "code": "    for v in a:" },
    "346": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "9", "column": "5", "endline": "14", "endcolumn": "1", "code": "    for v in a:" },
    "237": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "51", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "808": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "53", "column": "13", "endline": "53", "endcolumn": "15", "code": "            !lk = True" },
    "966": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "9", "column": "9", "endline": "16", "endcolumn": "1", "code": "        while choose({ False, True }):" },
    "708": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "32", "column": "10", "endline": "32", "endcolumn": "16", "code": "        !binsema = True" },
    "626": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "4", "column": "1", "endline": "6", "endcolumn": "1", "code": "def atomic_load(p):" },
    "294": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "22", "endline": "54", "endcolumn": "22", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "479": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "24", "endline": "45", "endcolumn": "24", "code": "        result[elt] += 1" },
    "460": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "38", "column": "1", "endline": "40", "endcolumn": "1", "code": "def bchoose(bg):" },
    "22": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "297": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "22", "endline": "54", "endcolumn": "24", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "296": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "24", "endline": "54", "endcolumn": "24", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "994": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "7", "column": "1", "endline": "16", "endcolumn": "1", "code": "def diner(which):" },
    "776": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "51", "column": "13", "endline": "51", "endcolumn": "15", "code": "            !lk = False" },
    "359": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "26", "code": "            result[v] += 1" },
    "967": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "13", "endline": "10", "endcolumn": "19", "code": "            acquire(?forks[left])" },
    "445": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "712": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "30", "column": "1", "endline": "33", "endcolumn": "1", "code": "def acquire(binsema):" },
    "236": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "46", "endline": "44", "endcolumn": "46", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "569": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "51", "endline": "68", "endcolumn": "56", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "934": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "33", "endline": "81", "endcolumn": "34", "code": "    atomically !q = list.append(!q, item)" },
    "684": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "25", "column": "5", "endline": "25", "endcolumn": "12", "code": "    result = BinSema(False)" },
    "461": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "41", "column": "9", "endline": "41", "endcolumn": "11", "code": "builtin add \"bag$add\"" },
    "32": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "5", "column": "1", "endline": "7", "endcolumn": "1", "code": "def append(s, e):" },
    "809": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "512": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "8", "endline": "54", "endcolumn": "18", "code": "    if result[elt] <= 0:" },
    "199": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "29", "endline": "42", "endcolumn": "44", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "576": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "52", "endline": "69", "endcolumn": "63", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "122": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "904": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "27", "endline": "76", "endcolumn": "28", "code": "    atomically when !q != []:" },
    "831": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "29", "endline": "57", "endcolumn": "43", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "979": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "19", "code": "            release(?forks[left])" },
    "898": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "75", "column": "1", "endline": "79", "endcolumn": "1", "code": "def get(q):" },
    "0": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "1", "column": "1", "endline": "19", "endcolumn": "1", "code": "from synch import Lock, acquire, release" },
    "466": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "15", "code": "    result = bg" },
    "350": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "10", "column": "12", "endline": "10", "endcolumn": "22", "code": "        if v in result:" },
    "15": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "137": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "699": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "25", "endline": "31", "endcolumn": "32", "code": "    atomically when not !binsema:" },
    "205": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "9", "endline": "47", "endcolumn": "23", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "838": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "59", "column": "1", "endline": "59", "endcolumn": "3", "code": "def notifyAll(c):" },
    "910": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "79", "column": "1", "endline": "79", "endcolumn": "1", "code": "" },
    "715": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "35", "column": "5", "endline": "38", "endcolumn": "5", "code": "    atomically:" },
    "817": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "34", "endline": "56", "endcolumn": "35", "code": "    atomically if !c != bag.empty():" },
    "471": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "44", "column": "8", "endline": "44", "endcolumn": "20", "code": "    if elt in result:" },
    "103": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "39": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "19", "endline": "6", "endcolumn": "20", "code": "    result = s + [e,]" },
    "197": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "34", "endline": "42", "endcolumn": "34", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "218": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "639": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "11", "column": "5", "endline": "14", "endcolumn": "1", "code": "    atomically:" },
    "810": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "45", "column": "1", "endline": "54", "endcolumn": "1", "code": "def wait(c, lk):" },
    "805": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "53", "column": "14", "endline": "53", "endcolumn": "15", "code": "            !lk = True" },
    "562": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "31", "endline": "68", "endcolumn": "32", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "291": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "29": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "5", "endline": "3", "endcolumn": "12", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "182": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "12", "code": "    result = [ (k, v) for k:v in d ]" },
    "82": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "19", "endline": "19", "endcolumn": "19", "code": "        result += v" },
    "353": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "20", "endline": "11", "endcolumn": "20", "code": "            result[v] += 1" },
    "918": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "14", "endline": "78", "endcolumn": "22", "code": "        !q = list.tail(!q)" },
    "891": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "72", "column": "1", "endline": "72", "endcolumn": "3", "code": "def Queue():" },
    "190": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "5", "endline": "39", "endcolumn": "6", "code": "    if a == []:" },
    "766": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "26", "endline": "50", "endcolumn": "32", "code": "            !c = bag.add(!c, ctx)" },
    "231": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "35", "endline": "44", "endcolumn": "38", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "458": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "14", "endline": "39", "endcolumn": "29", "code": "    result = choose(keys(bg))" },
    "378": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "8", "endline": "17", "endcolumn": "16", "code": "    if elt in bg:" },
    "121": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "92": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "465": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "15", "code": "    result = bg" },
    "290": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "832": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "25", "endline": "57", "endcolumn": "43", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "130": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "1": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "2", "column": "1", "endline": "2", "endcolumn": "3", "code": "def subseq(s, b, e):" },
    "804": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "905": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "21", "endline": "76", "endcolumn": "28", "code": "    atomically when !q != []:" },
    "803": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "54", "column": "1", "endline": "54", "endcolumn": "1", "code": "" },
    "772": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "18", "endline": "50", "endcolumn": "33", "code": "            !c = bag.add(!c, ctx)" },
    "770": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "30", "endline": "50", "endcolumn": "32", "code": "            !c = bag.add(!c, ctx)" },
    "682": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "25", "column": "22", "endline": "25", "endcolumn": "26", "code": "    result = BinSema(False)" },
    "230": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "35", "endline": "44", "endcolumn": "38", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "892": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "72", "column": "1", "endline": "74", "endcolumn": "1", "code": "def Queue():" },
    "549": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "18", "endline": "65", "endcolumn": "18", "code": "            elif k == n:" },
    "638": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "10", "column": "1", "endline": "14", "endcolumn": "1", "code": "def tas(lk):" },
    "623": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "25", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "196": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "29", "endline": "42", "endcolumn": "32", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "57": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "14", "endline": "13", "endcolumn": "19", "code": "    result = subseq(s, 1, len(s))" },
    "816": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "25", "endline": "56", "endcolumn": "33", "code": "    atomically if !c != bag.empty():" },
    "622": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "26", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "773": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "13", "endline": "50", "endcolumn": "14", "code": "            !c = bag.add(!c, ctx)" },
    "698": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "26", "endline": "31", "endcolumn": "32", "code": "    atomically when not !binsema:" },
    "219": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "23", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "761": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "36", "endline": "49", "endcolumn": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "477": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "24", "code": "        result[elt] += 1" },
    "683": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "25", "column": "14", "endline": "25", "endcolumn": "27", "code": "    result = BinSema(False)" },
    "136": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "459": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "39", "column": "5", "endline": "39", "endcolumn": "12", "code": "    result = choose(keys(bg))" },
    "802": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "352": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "18", "code": "            result[v] += 1" },
    "912": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "77", "column": "18", "endline": "77", "endcolumn": "26", "code": "        result = list.head(!q)" },
    "129": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "560": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "13", "endline": "66", "endcolumn": "32", "code": "            elif k == n:" },
    "718": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "17", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "688": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "28", "column": "15", "endline": "28", "endcolumn": "21", "code": "    result = !binsema" },
    "131": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "5", "endline": "27", "endcolumn": "12", "code": "    result = [ v for v in a ]" },
    "578": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "65", "endline": "69", "endcolumn": "66", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "574": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "99": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "760": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "40", "endline": "49", "endcolumn": "42", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "448": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "36", "column": "18", "endline": "36", "endcolumn": "25", "code": "    result = max(keys(bg))" },
    "207": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "769": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "26", "endline": "50", "endcolumn": "32", "code": "            !c = bag.add(!c, ctx)" },
    "355": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "21", "code": "            result[v] += 1" },
    "191": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "40", "column": "18", "endline": "40", "endcolumn": "19", "code": "        result = []" },
    "5": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "771": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "26", "endline": "50", "endcolumn": "32", "code": "            !c = bag.add(!c, ctx)" },
    "202": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "43", "endline": "42", "endcolumn": "43", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "806": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "53", "column": "14", "endline": "53", "endcolumn": "15", "code": "            !lk = True" },
    "75": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "18", "column": "14", "endline": "18", "endcolumn": "14", "code": "    for v in a:" },
    "917": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "10", "endline": "78", "endcolumn": "10", "code": "        !q = list.tail(!q)" },
    "916": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "77", "column": "9", "endline": "77", "endcolumn": "16", "code": "        result = list.head(!q)" },
    "125": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "203": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "38", "endline": "42", "endcolumn": "44", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "467": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "15", "code": "    result = bg" },
    "563": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "26", "endline": "68", "endcolumn": "33", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "470": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "44", "column": "15", "endline": "44", "endcolumn": "20", "code": "    if elt in result:" },
    "189": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "39", "column": "8", "endline": "39", "endcolumn": "14", "code": "    if a == []:" },
    "185": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "38", "column": "1", "endline": "47", "endcolumn": "23", "code": "def qsort(a):" },
    "575": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "628": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "7", "column": "1", "endline": "9", "endcolumn": "1", "code": "def atomic_store(p, v):" },
    "65": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "27", "endline": "13", "endcolumn": "32", "code": "    result = subseq(s, 1, len(s))" },
    "206": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "184": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "38", "column": "1", "endline": "38", "endcolumn": "3", "code": "def qsort(a):" },
    "969": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "28", "endline": "10", "endcolumn": "31", "code": "            acquire(?forks[left])" },
    "913": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "77", "column": "29", "endline": "77", "endcolumn": "29", "code": "        result = list.head(!q)" },
    "192": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "40", "column": "18", "endline": "40", "endcolumn": "19", "code": "        result = []" },
    "839": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "59", "column": "1", "endline": "61", "endcolumn": "1", "code": "def notifyAll(c):" },
    "765": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "18", "endline": "50", "endcolumn": "24", "code": "            !c = bag.add(!c, ctx)" },
    "577": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "65", "endline": "69", "endcolumn": "73", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "689": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "28", "column": "15", "endline": "28", "endcolumn": "21", "code": "    result = !binsema" },
    "349": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "10", "column": "17", "endline": "10", "endcolumn": "22", "code": "        if v in result:" },
    "561": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "26", "endline": "68", "endcolumn": "29", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "132": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "26", "column": "1", "endline": "29", "endcolumn": "45", "code": "def list(a):" },
    "55": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "12", "column": "1", "endline": "15", "endcolumn": "23", "code": "def tail(s):" },
    "899": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "807": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "53", "column": "19", "endline": "53", "endcolumn": "22", "code": "            !lk = True" },
    "767": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "27", "endline": "50", "endcolumn": "27", "code": "            !c = bag.add(!c, ctx)" },
    "474": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "16", "endline": "45", "endcolumn": "18", "code": "        result[elt] += 1" },
    "801": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "629": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "16", "endline": "8", "endcolumn": "21", "code": "    atomically !p = v" },
    "356": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "26", "code": "            result[v] += 1" },
    "472": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "44", "column": "5", "endline": "44", "endcolumn": "6", "code": "    if elt in result:" },
    "45": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "14", "code": "    result = s[0]" },
    "351": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "10", "column": "9", "endline": "10", "endcolumn": "10", "code": "        if v in result:" },
    "1001": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "18", "column": "17", "endline": "18", "endcolumn": "17", "code": "    spawn diner(i)" },
    "204": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "29", "endline": "42", "endcolumn": "44", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "800": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "54", "column": "1", "endline": "54", "endcolumn": "1", "code": "" },
    "124": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "16", "code": "    result = [ v for v in a ]" },
    "968": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "22", "endline": "10", "endcolumn": "26", "code": "            acquire(?forks[left])" },
    "473": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "14", "code": "        result[elt] += 1" },
    "133": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "30", "column": "1", "endline": "30", "endcolumn": "3", "code": "def values(d):" },
    "764": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "50", "column": "14", "endline": "50", "endcolumn": "14", "code": "            !c = bag.add(!c, ctx)" },
    "89": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "22", "column": "1", "endline": "22", "endcolumn": "3", "code": "def set(a):" },
    "911": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "150": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "29", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "214": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "49", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "18": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "16", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "441": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "18", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "522": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "50", "column": "1", "endline": "57", "endcolumn": "44", "code": "def remove(bg, elt):" },
    "518": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "55", "column": "20", "endline": "55", "endcolumn": "22", "code": "        del result[elt]" },
    "100": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "790": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "57", "endline": "52", "endcolumn": "63", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "69": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "12", "column": "1", "endline": "15", "endcolumn": "23", "code": "def tail(s):" },
    "431": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "31", "column": "5", "endline": "31", "endcolumn": "12", "code": "    result = min(keys(bg))" },
    "900": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "740": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "22", "code": "    result = bag.empty()" },
    "617": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "4", "column": "1", "endline": "4", "endcolumn": "3", "code": "def atomic_load(p):" },
    "743": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "43", "column": "5", "endline": "43", "endcolumn": "12", "code": "    result = bag.empty()" },
    "96": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "950": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "1", "endline": "5", "endcolumn": "7", "code": "forks = [Lock(),] * N" },
    "733": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "40", "column": "15", "endline": "40", "endcolumn": "21", "code": "    result = !binsema" },
    "730": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "39", "column": "1", "endline": "41", "endcolumn": "1", "code": "def held(binsema):" },
    "416": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "29", "column": "1", "endline": "29", "endcolumn": "3", "code": "def bmin(bg):" },
    "81": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "9", "endline": "19", "endcolumn": "19", "code": "        result += v" },
    "79": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "18", "column": "5", "endline": "21", "endcolumn": "46", "code": "    for v in a:" },
    "793": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "40", "endline": "52", "endcolumn": "71", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "616": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "58", "column": "1", "endline": "71", "endcolumn": "1", "code": "def combinations(bg, k):" },
    "430": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "31", "column": "14", "endline": "31", "endcolumn": "26", "code": "    result = min(keys(bg))" },
    "217": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "719": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "16", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "25": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "957": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "32", "endline": "8", "endcolumn": "36", "code": "    let left, right = (which, (which + 1) % N):" },
    "91": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "583": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "65", "endline": "69", "endcolumn": "73", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "572": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "44", "endline": "68", "endcolumn": "57", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "614": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "30", "endline": "70", "endcolumn": "53", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "582": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "69", "endline": "69", "endcolumn": "73", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "169": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "17", "endline": "35", "endcolumn": "17", "code": "    result = [ (k, v) for k:v in d ]" },
    "732": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "40", "column": "15", "endline": "40", "endcolumn": "21", "code": "    result = !binsema" },
    "907": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "79", "column": "1", "endline": "79", "endcolumn": "1", "code": "" },
    "491": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "49", "column": "1", "endline": "49", "endcolumn": "27", "code": "builtin remove \"bag$remove\"" },
    "523": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "58", "column": "1", "endline": "58", "endcolumn": "3", "code": "def combinations(bg, k):" },
    "517": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "55", "column": "20", "endline": "55", "endcolumn": "22", "code": "        del result[elt]" },
    "906": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "490": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "49", "column": "9", "endline": "49", "endcolumn": "14", "code": "builtin remove \"bag$remove\"" },
    "716": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "9", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "573": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "17", "endline": "71", "endcolumn": "1", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "956": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "32", "endline": "8", "endcolumn": "36", "code": "    let left, right = (which, (which + 1) % N):" },
    "440": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "12", "endline": "35", "endcolumn": "13", "code": "    assert bg != {:}" },
    "164": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "35": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "14", "endline": "6", "endcolumn": "14", "code": "    result = s + [e,]" },
    "379": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "5", "endline": "17", "endcolumn": "6", "code": "    if elt in bg:" },
    "220": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "23", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "49": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "17", "code": "    result = s[0]" },
    "248": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "106": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "669": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "16", "column": "5", "endline": "20", "endcolumn": "1", "code": "    atomically:" },
    "389": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "20", "column": "18", "endline": "20", "endcolumn": "18", "code": "        result = 0" },
    "298": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "25", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "270": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "20", "endline": "49", "endcolumn": "23", "code": "    result = qsort(list(d))" },
    "216": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "581": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "73", "endline": "69", "endcolumn": "73", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "611": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "52", "endline": "70", "endcolumn": "52", "code": "                                | combinations(tl, k)" },
    "329": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "20", "endline": "5", "endcolumn": "20", "code": "    result = { elt:1 for elt in s }" },
    "742": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "24", "code": "    result = bag.empty()" },
    "78": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "18", "column": "5", "endline": "21", "endcolumn": "46", "code": "    for v in a:" },
    "731": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "40", "column": "15", "endline": "40", "endcolumn": "21", "code": "    result = !binsema" },
    "415": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "28", "column": "1", "endline": "28", "endcolumn": "23", "code": "builtin bmin \"bag$bmin\"" },
    "152": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "964": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "9", "column": "24", "endline": "9", "endcolumn": "34", "code": "        while choose({ False, True }):" },
    "792": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "69", "endline": "52", "endcolumn": "71", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "919": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "25", "endline": "78", "endcolumn": "25", "code": "        !q = list.tail(!q)" },
    "102": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "16", "code": "    result = { v for v in a }" },
    "951": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "7", "column": "1", "endline": "7", "endcolumn": "3", "code": "def diner(which):" },
    "714": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "34", "column": "1", "endline": "38", "endcolumn": "5", "code": "def release(binsema):" },
    "643": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "12", "column": "9", "endline": "12", "endcolumn": "16", "code": "        result = !lk" },
    "492": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "50", "column": "1", "endline": "50", "endcolumn": "3", "code": "def remove(bg, elt):" },
    "717": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "9", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "395": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "23", "column": "1", "endline": "27", "endcolumn": "1", "code": "def size(bg):" },
    "692": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "28", "column": "5", "endline": "28", "endcolumn": "12", "code": "    result = !binsema" },
    "433": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "33", "column": "9", "endline": "33", "endcolumn": "12", "code": "builtin bmax \"bag$bmax\"" },
    "901": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "16", "endline": "79", "endcolumn": "1", "code": "    atomically when !q != []:" },
    "571": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "51", "endline": "68", "endcolumn": "56", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "633": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "21", "endline": "8", "endcolumn": "21", "code": "    atomically !p = v" },
    "442": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "12", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "345": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "9", "column": "5", "endline": "14", "endcolumn": "1", "code": "    for v in a:" },
    "642": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "12", "column": "18", "endline": "12", "endcolumn": "20", "code": "        result = !lk" },
    "443": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "156": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "34", "column": "1", "endline": "34", "endcolumn": "3", "code": "def items(d):" },
    "432": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "29", "column": "1", "endline": "32", "endcolumn": "1", "code": "def bmin(bg):" },
    "316": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "4", "column": "1", "endline": "6", "endcolumn": "1", "code": "def fromSet(s):" },
    "312": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "2", "column": "14", "endline": "2", "endcolumn": "16", "code": "    result = {:}" },
    "68": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "5", "endline": "13", "endcolumn": "12", "code": "    result = subseq(s, 1, len(s))" },
    "632": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "21", "endline": "8", "endcolumn": "21", "code": "    atomically !p = v" },
    "493": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "50", "column": "1", "endline": "57", "endcolumn": "44", "code": "def remove(bg, elt):" },
    "280": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "53", "column": "17", "endline": "53", "endcolumn": "17", "code": "    let n = len(d):" },
    "693": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "27", "column": "1", "endline": "29", "endcolumn": "1", "code": "def acquired(binsema):" },
    "238": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "46", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "521": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "50", "column": "1", "endline": "57", "endcolumn": "44", "code": "def remove(bg, elt):" },
    "978": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "34", "code": "            acquire(?forks[right])" },
    "173": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "20", "endline": "35", "endcolumn": "20", "code": "    result = [ (k, v) for k:v in d ]" },
    "107": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "80": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "9", "endline": "19", "endcolumn": "19", "code": "        result += v" },
    "610": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "52", "endline": "70", "endcolumn": "52", "code": "                                | combinations(tl, k)" },
    "988": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "22", "endline": "14", "endcolumn": "33", "code": "            release(?forks[right])" },
    "580": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "69", "endline": "69", "endcolumn": "69", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "157": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "34", "column": "1", "endline": "37", "endcolumn": "22", "code": "def items(d):" },
    "123": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "16", "code": "    result = [ v for v in a ]" },
    "151": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "668": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "16", "column": "5", "endline": "20", "endcolumn": "1", "code": "    atomically:" },
    "902": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "22", "endline": "76", "endcolumn": "22", "code": "    atomically when !q != []:" },
    "570": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "68", "column": "55", "endline": "68", "endcolumn": "56", "code": "                let hd = bmin(bg) let tl = remove(bg, hd):" },
    "335": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "249": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "215": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "45", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "928": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "16", "endline": "81", "endcolumn": "41", "code": "    atomically !q = list.append(!q, item)" },
    "183": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "34", "column": "1", "endline": "37", "endcolumn": "22", "code": "def items(d):" },
    "520": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "55", "column": "9", "endline": "55", "endcolumn": "23", "code": "        del result[elt]" },
    "311": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "2", "column": "14", "endline": "2", "endcolumn": "16", "code": "    result = {:}" },
    "239": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "213": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "45", "endline": "43", "endcolumn": "45", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "417": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "29", "column": "1", "endline": "32", "endcolumn": "1", "code": "def bmin(bg):" },
    "434": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "33", "column": "1", "endline": "33", "endcolumn": "23", "code": "builtin bmax \"bag$bmax\"" },
    "281": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "53", "column": "13", "endline": "53", "endcolumn": "18", "code": "    let n = len(d):" },
    "394": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "23", "column": "1", "endline": "23", "endcolumn": "3", "code": "def size(bg):" },
    "347": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "9", "column": "5", "endline": "14", "endcolumn": "1", "code": "    for v in a:" },
    "313": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "2", "column": "5", "endline": "2", "endcolumn": "12", "code": "    result = {:}" },
    "308": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "52", "column": "1", "endline": "55", "endcolumn": "1", "code": "def reversed(d):" },
    "791": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "40", "endline": "52", "endcolumn": "64", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "952": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "7", "column": "1", "endline": "16", "endcolumn": "1", "code": "def diner(which):" },
    "444": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "271": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "25", "endline": "49", "endcolumn": "25", "code": "    result = qsort(list(d))" },
    "34": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "14", "endline": "6", "endcolumn": "14", "code": "    result = s + [e,]" },
    "358": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "11", "column": "26", "endline": "11", "endcolumn": "26", "code": "            result[v] += 1" },
    "344": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "14", "code": "    for v in a:" },
    "337": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "4", "column": "1", "endline": "6", "endcolumn": "1", "code": "def fromSet(s):" },
    "741": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "24", "code": "    result = bag.empty()" },
    "953": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "24", "endline": "8", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "101": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "16", "code": "    result = { v for v in a }" },
    "24": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "37", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "19": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "18", "endline": "3", "endcolumn": "18", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "334": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "221": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "90": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "22", "column": "1", "endline": "25", "endcolumn": "35", "code": "def set(a):" },
    "903": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "76", "column": "21", "endline": "76", "endcolumn": "22", "code": "    atomically when !q != []:" },
    "165": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "397": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "24", "column": "14", "endline": "24", "endcolumn": "14", "code": "    result = 0" },
    "310": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "1", "column": "1", "endline": "3", "endcolumn": "1", "code": "def empty():" },
    "212": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "48": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "16", "endline": "9", "endcolumn": "16", "code": "    result = s[0]" },
    "876": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "9", "endline": "67", "endcolumn": "16", "code": "        !sema -= 1" },
    "138": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "29", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "613": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "35", "endline": "70", "endcolumn": "53", "code": "                                | combinations(tl, k)" },
    "794": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "35", "endline": "52", "endcolumn": "37", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "272": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "25", "endline": "49", "endcolumn": "25", "code": "    result = qsort(list(d))" },
    "826": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "25", "endline": "57", "endcolumn": "43", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "982": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "22", "endline": "13", "endcolumn": "32", "code": "            release(?forks[left])" },
    "413": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "23", "column": "1", "endline": "27", "endcolumn": "1", "code": "def size(bg):" },
    "282": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "53", "column": "5", "endline": "55", "endcolumn": "1", "code": "    let n = len(d):" },
    "734": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "40", "column": "14", "endline": "40", "endcolumn": "21", "code": "    result = !binsema" },
    "322": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "166": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "148": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "27": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "886": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "25", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "744": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "42", "column": "1", "endline": "44", "endcolumn": "1", "code": "def Condition():" },
    "690": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "28", "column": "15", "endline": "28", "endcolumn": "21", "code": "    result = !binsema" },
    "222": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "198": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "29", "endline": "42", "endcolumn": "35", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "965": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "9", "column": "15", "endline": "9", "endcolumn": "37", "code": "        while choose({ False, True }):" },
    "728": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "34", "column": "1", "endline": "38", "endcolumn": "5", "code": "def release(binsema):" },
    "685": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "24", "column": "1", "endline": "26", "endcolumn": "1", "code": "def Lock():" },
    "382": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "21", "endline": "18", "endcolumn": "23", "code": "        result = bg[elt]" },
    "84": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "9", "endline": "19", "endcolumn": "19", "code": "        result += v" },
    "1004": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "19", "column": "1", "endline": "19", "endcolumn": "1", "code": "" },
    "210": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "862": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "29", "endline": "66", "endcolumn": "29", "code": "    atomically when !sema > 0:" },
    "675": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "22", "column": "14", "endline": "22", "endcolumn": "21", "code": "    result = acquired" },
    "514": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "8", "endline": "54", "endcolumn": "23", "code": "    if result[elt] <= 0:" },
    "299": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "372": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "15", "column": "1", "endline": "15", "endcolumn": "39", "code": "builtin multiplicity \"bag$multiplicity\"" },
    "515": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "54", "column": "5", "endline": "54", "endcolumn": "6", "code": "    if result[elt] <= 0:" },
    "551": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "23", "endline": "65", "endcolumn": "23", "code": "            elif k == n:" },
    "95": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "27", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "788": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "57", "endline": "52", "endcolumn": "63", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "625": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "26", "code": "    atomically result = !p" },
    "37": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "19", "endline": "6", "endcolumn": "19", "code": "    result = s + [e,]" },
    "778": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "737": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "42", "column": "1", "endline": "42", "endcolumn": "3", "code": "def Condition():" },
    "827": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "29", "endline": "57", "endcolumn": "39", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "26": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "285": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "38", "endline": "54", "endcolumn": "38", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "223": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "49", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "795": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "25", "endline": "52", "endcolumn": "72", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "747": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "46", "column": "15", "endline": "46", "endcolumn": "15", "code": "    var cnt = 0" },
    "323": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "877": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "501": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "52", "column": "5", "endline": "52", "endcolumn": "6", "code": "    if elt in result:" },
    "414": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "28", "column": "9", "endline": "28", "endcolumn": "12", "code": "builtin bmin \"bag$bmin\"" },
    "273": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "20", "endline": "49", "endcolumn": "26", "code": "    result = qsort(list(d))" },
    "797": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "54", "column": "1", "endline": "54", "endcolumn": "1", "code": "" },
    "412": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "23", "column": "1", "endline": "27", "endcolumn": "1", "code": "def size(bg):" },
    "981": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "28", "endline": "13", "endcolumn": "31", "code": "            release(?forks[left])" },
    "373": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "16", "column": "1", "endline": "16", "endcolumn": "3", "code": "def multiplicity(bg, elt):" },
    "105": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "27", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "283": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "983": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "33", "code": "            release(?forks[left])" },
    "971": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "13", "endline": "10", "endcolumn": "33", "code": "            acquire(?forks[left])" },
    "383": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "21", "endline": "18", "endcolumn": "23", "code": "        result = bg[elt]" },
    "155": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "30", "column": "1", "endline": "33", "endcolumn": "23", "code": "def values(d):" },
    "973": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "19", "code": "            acquire(?forks[right])" },
    "921": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "24", "endline": "78", "endcolumn": "25", "code": "        !q = list.tail(!q)" },
    "869": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "154": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "5", "endline": "31", "endcolumn": "12", "code": "    result = [ v for _:v in d ]" },
    "923": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "9", "endline": "78", "endcolumn": "10", "code": "        !q = list.tail(!q)" },
    "640": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "11", "column": "5", "endline": "14", "endcolumn": "1", "code": "    atomically:" },
    "550": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "23", "endline": "65", "endcolumn": "23", "code": "            elif k == n:" },
    "516": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "55", "column": "13", "endline": "55", "endcolumn": "18", "code": "        del result[elt]" },
    "94": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "27", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "104": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "631": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "17", "endline": "8", "endcolumn": "17", "code": "    atomically !p = v" },
    "630": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "8", "column": "17", "endline": "8", "endcolumn": "17", "code": "    atomically !p = v" },
    "500": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "52", "column": "8", "endline": "52", "endcolumn": "20", "code": "    if elt in result:" },
    "972": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "13", "endline": "10", "endcolumn": "33", "code": "            acquire(?forks[left])" },
    "380": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "18", "endline": "18", "endcolumn": "19", "code": "        result = bg[elt]" },
    "225": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "43", "column": "23", "endline": "43", "endcolumn": "53", "code": "        let lower = [ v for v in rest where v < pivot ]" },
    "735": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "40", "column": "5", "endline": "40", "endcolumn": "12", "code": "    result = !binsema" },
    "641": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "12", "column": "19", "endline": "12", "endcolumn": "20", "code": "        result = !lk" },
    "59": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "21", "endline": "13", "endcolumn": "21", "code": "    result = subseq(s, 1, len(s))" },
    "868": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "68", "column": "1", "endline": "68", "endcolumn": "1", "code": "" },
    "922": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "14", "endline": "78", "endcolumn": "26", "code": "        !q = list.tail(!q)" },
    "691": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "28", "column": "14", "endline": "28", "endcolumn": "21", "code": "    result = !binsema" },
    "275": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "5", "endline": "49", "endcolumn": "12", "code": "    result = qsort(list(d))" },
    "745": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "45", "column": "1", "endline": "45", "endcolumn": "3", "code": "def wait(c, lk):" },
    "502": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "9", "endline": "53", "endcolumn": "14", "code": "        result[elt] -= 1" },
    "970": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "10", "column": "22", "endline": "10", "endcolumn": "32", "code": "            acquire(?forks[left])" },
    "696": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "31", "column": "16", "endline": "33", "endcolumn": "1", "code": "    atomically when not !binsema:" },
    "820": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "56", "column": "16", "endline": "56", "endcolumn": "17", "code": "    atomically if !c != bag.empty():" },
    "284": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "980": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "13", "column": "22", "endline": "13", "endcolumn": "26", "code": "            release(?forks[left])" },
    "884": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "552": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "18", "endline": "65", "endcolumn": "23", "code": "            elif k == n:" },
    "97": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "870": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "10", "endline": "67", "endcolumn": "13", "code": "        !sema -= 1" },
    "86": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "21", "column": "46", "endline": "21", "endcolumn": "46", "code": "# convert list (or values of a dict) to a set" },
    "746": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "45", "column": "1", "endline": "54", "endcolumn": "1", "code": "def wait(c, lk):" },
    "636": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "7", "column": "1", "endline": "9", "endcolumn": "1", "code": "def atomic_store(p, v):" },
    "880": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "69", "column": "1", "endline": "71", "endcolumn": "5", "code": "def V(sema):" },
    "36": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "19", "endline": "6", "endcolumn": "20", "code": "    result = s + [e,]" },
    "646": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "13", "column": "15", "endline": "13", "endcolumn": "18", "code": "        !lk = True" },
    "469": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "44", "column": "8", "endline": "44", "endcolumn": "10", "code": "    if elt in result:" },
    "736": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "39", "column": "1", "endline": "41", "endcolumn": "1", "code": "def held(binsema):" },
    "274": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "49", "column": "14", "endline": "49", "endcolumn": "27", "code": "    result = qsort(list(d))" },
    "861": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "21", "endline": "66", "endcolumn": "25", "code": "    atomically when !sema > 0:" },
    "796": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "20", "endline": "54", "endcolumn": "1", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "887": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "637": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "10", "column": "1", "endline": "10", "endcolumn": "3", "code": "def tas(lk):" },
    "411": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "27", "column": "1", "endline": "27", "endcolumn": "1", "code": "" },
    "920": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "78", "column": "25", "endline": "78", "endcolumn": "25", "code": "        !q = list.tail(!q)" },
    "647": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "13", "column": "9", "endline": "13", "endcolumn": "11", "code": "        !lk = True" },
    "519": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "55", "column": "13", "endline": "55", "endcolumn": "23", "code": "        del result[elt]" },
    "553": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "65", "column": "13", "endline": "65", "endcolumn": "16", "code": "            elif k == n:" },
    "927": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "80", "column": "1", "endline": "82", "endcolumn": "1", "code": "def put(q, item):" },
    "885": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "70", "column": "16", "endline": "70", "endcolumn": "25", "code": "    atomically !sema += 1" },
    "87": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "16", "column": "1", "endline": "21", "endcolumn": "46", "code": "def sum(a):" },
    "977": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "11", "column": "13", "endline": "11", "endcolumn": "34", "code": "            acquire(?forks[right])" },
    "875": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "9", "endline": "67", "endcolumn": "18", "code": "        !sema -= 1" },
    "863": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "21", "endline": "66", "endcolumn": "29", "code": "    atomically when !sema > 0:" },
    "825": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "25", "endline": "57", "endcolumn": "26", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "410": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "9", "endline": "26", "endcolumn": "17", "code": "        result += c" },
    "503": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "53", "column": "16", "endline": "53", "endcolumn": "18", "code": "        result[elt] -= 1" },
    "31": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "5", "column": "1", "endline": "5", "endcolumn": "3", "code": "def append(s, e):" },
    "799": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "54", "column": "1", "endline": "54", "endcolumn": "1", "code": "" },
    "21": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "19", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "874": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "18", "endline": "67", "endcolumn": "18", "code": "        !sema -= 1" },
    "749": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "47", "column": "23", "endline": "47", "endcolumn": "24", "code": "    let (), ctx = save():" },
    "824": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "57", "column": "26", "endline": "57", "endcolumn": "26", "code": "        !c = bag.remove(!c, bag.bchoose(!c))" },
    "739": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "43", "column": "14", "endline": "43", "endcolumn": "22", "code": "    result = bag.empty()" },
    "468": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "43", "column": "5", "endline": "43", "endcolumn": "12", "code": "    result = bg" },
    "386": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "17", "column": "5", "endline": "21", "endcolumn": "1", "code": "    if elt in bg:" },
    "926": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "80", "column": "1", "endline": "80", "endcolumn": "3", "code": "def put(q, item):" },
    "644": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "13", "column": "10", "endline": "13", "endcolumn": "11", "code": "        !lk = True" },
    "485": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "16", "endline": "47", "endcolumn": "18", "code": "        result[elt] = 1" },
    "727": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "35", "column": "5", "endline": "38", "endcolumn": "5", "code": "    atomically:" },
    "393": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "22", "column": "1", "endline": "22", "endcolumn": "23", "code": "builtin size \"bag$size\"" },
    "597": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "41", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "326": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "662": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "19", "column": "14", "endline": "19", "endcolumn": "14", "code": "            !p = new" },
    "159": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "787": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "57", "endline": "52", "endcolumn": "58", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "250": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "42", "column": "9", "endline": "47", "endcolumn": "23", "code": "        let (pivot, rest) = head(a), tail(a)" },
    "986": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "22", "endline": "14", "endcolumn": "26", "code": "            release(?forks[right])" },
    "16": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "537": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "62", "column": "17", "endline": "62", "endcolumn": "24", "code": "        let n = size(bg):" },
    "276": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "48", "column": "1", "endline": "51", "endcolumn": "25", "code": "def sorted(d):" },
    "529": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "5", "endline": "59", "endcolumn": "6", "code": "    if k == 0:" },
    "499": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "52", "column": "15", "endline": "52", "endcolumn": "20", "code": "    if elt in result:" },
    "176": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "658": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "18", "endline": "17", "endcolumn": "26", "code": "        result = !p == old" },
    "784": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "40", "endline": "52", "endcolumn": "55", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "589": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "319": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "663": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "19", "column": "14", "endline": "19", "endcolumn": "14", "code": "            !p = new" },
    "425": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "245": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "987": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "28", "endline": "14", "endcolumn": "32", "code": "            release(?forks[right])" },
    "144": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "671": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "21", "column": "1", "endline": "21", "endcolumn": "3", "code": "def BinSema(acquired):" },
    "497": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "51", "column": "5", "endline": "51", "endcolumn": "12", "code": "    result = bg" },
    "277": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "52", "column": "1", "endline": "52", "endcolumn": "3", "code": "def reversed(d):" },
    "365": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "21", "code": "            result[v] = 1" },
    "439": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "251": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "22", "endline": "45", "endcolumn": "26", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "390": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "20", "column": "9", "endline": "20", "endcolumn": "16", "code": "        result = 0" },
    "437": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "486": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "9", "endline": "47", "endcolumn": "19", "code": "        result[elt] = 1" },
    "381": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "18", "column": "18", "endline": "18", "endcolumn": "19", "code": "        result = bg[elt]" },
    "670": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "15", "column": "1", "endline": "20", "endcolumn": "1", "code": "def cas(p, old, new):" },
    "242": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "24", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "958": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "40", "endline": "8", "endcolumn": "40", "code": "    let left, right = (which, (which + 1) % N):" },
    "364": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "20", "endline": "13", "endcolumn": "20", "code": "            result[v] = 1" },
    "330": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "64": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "31", "endline": "13", "endcolumn": "31", "code": "    result = subseq(s, 1, len(s))" },
    "426": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "332": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "33", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "44": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "8", "column": "1", "endline": "10", "endcolumn": "1", "code": "def head(s):" },
    "872": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "9", "endline": "67", "endcolumn": "18", "code": "        !sema -= 1" },
    "145": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "939": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "21", "endline": "81", "endcolumn": "41", "code": "    atomically !q = list.append(!q, item)" },
    "843": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "21", "endline": "60", "endcolumn": "29", "code": "    atomically !c = bag.empty()" },
    "177": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "34", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "161": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "34", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "659": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "17", "column": "9", "endline": "17", "endcolumn": "16", "code": "        result = !p == old" },
    "498": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "52", "column": "8", "endline": "52", "endcolumn": "10", "code": "    if elt in result:" },
    "392": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "22", "column": "9", "endline": "22", "endcolumn": "12", "code": "builtin size \"bag$size\"" },
    "999": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "18", "column": "11", "endline": "18", "endcolumn": "15", "code": "    spawn diner(i)" },
    "162": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "34", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "871": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "10", "endline": "67", "endcolumn": "13", "code": "        !sema -= 1" },
    "170": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "17", "endline": "35", "endcolumn": "17", "code": "    result = [ (k, v) for k:v in d ]" },
    "333": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "74": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "17", "column": "5", "endline": "17", "endcolumn": "12", "code": "    result = 0" },
    "321": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "33", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "243": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "24", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "496": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "51", "column": "14", "endline": "51", "endcolumn": "15", "code": "    result = bg" },
    "859": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "320": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "33", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "391": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "16", "column": "1", "endline": "21", "endcolumn": "1", "code": "def multiplicity(bg, elt):" },
    "595": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "39", "endline": "69", "endcolumn": "40", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "785": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "57", "endline": "52", "endcolumn": "63", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "677": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "21", "column": "1", "endline": "23", "endcolumn": "1", "code": "def BinSema(acquired):" },
    "605": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "35", "endline": "70", "endcolumn": "46", "code": "                                | combinations(tl, k)" },
    "945": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "14", "endline": "5", "endcolumn": "15", "code": "forks = [Lock(),] * N" },
    "367": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "13", "column": "13", "endline": "13", "endcolumn": "21", "code": "            result[v] = 1" },
    "436": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "34", "column": "1", "endline": "37", "endcolumn": "1", "code": "def bmax(bg):" },
    "33": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "14", "endline": "6", "endcolumn": "14", "code": "    result = s + [e,]" },
    "535": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "62", "column": "17", "endline": "62", "endcolumn": "20", "code": "        let n = size(bg):" },
    "488": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "9", "endline": "47", "endcolumn": "19", "code": "        result[elt] = 1" },
    "538": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "62", "column": "9", "endline": "71", "endcolumn": "1", "code": "        let n = size(bg):" },
    "244": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "66": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "21", "endline": "13", "endcolumn": "32", "code": "    result = subseq(s, 1, len(s))" },
    "331": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "167": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "76": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "18", "column": "14", "endline": "18", "endcolumn": "14", "code": "    for v in a:" },
    "14": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "729": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "39", "column": "1", "endline": "39", "endcolumn": "3", "code": "def held(binsema):" },
    "160": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "598": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "118": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "27", "column": "16", "endline": "27", "endcolumn": "27", "code": "    result = [ v for v in a ]" },
    "873": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "67", "column": "9", "endline": "67", "endcolumn": "18", "code": "        !sema -= 1" },
    "23": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "725": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "37", "column": "20", "endline": "37", "endcolumn": "24", "code": "        !binsema = False" },
    "676": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "22", "column": "5", "endline": "22", "endcolumn": "12", "code": "    result = acquired" },
    "724": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "37", "column": "10", "endline": "37", "endcolumn": "16", "code": "        !binsema = False" },
    "596": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "36", "endline": "69", "endcolumn": "40", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "149": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "534": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "5", "endline": "71", "endcolumn": "1", "code": "    if k == 0:" },
    "612": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "70", "column": "48", "endline": "70", "endcolumn": "52", "code": "                                | combinations(tl, k)" },
    "674": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "22", "column": "14", "endline": "22", "endcolumn": "21", "code": "    result = acquired" },
    "758": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "49", "column": "36", "endline": "49", "endcolumn": "37", "code": "            cnt = bag.multiplicity(!c, ctx)" },
    "428": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "31", "column": "23", "endline": "31", "endcolumn": "24", "code": "    result = min(keys(bg))" },
    "726": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "37", "column": "9", "endline": "37", "endcolumn": "16", "code": "        !binsema = False" },
    "594": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "36", "endline": "69", "endcolumn": "40", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "1006": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "1", "column": "1", "endline": "19", "endcolumn": "1", "code": "from synch import Lock, acquire, release" },
    "858": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "66", "column": "16", "endline": "68", "endcolumn": "1", "code": "    atomically when !sema > 0:" },
    "489": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "42", "column": "1", "endline": "48", "endcolumn": "1", "code": "def add(bg, elt):" },
    "396": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "24", "column": "14", "endline": "24", "endcolumn": "14", "code": "    result = 0" },
    "58": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "13", "column": "21", "endline": "13", "endcolumn": "32", "code": "    result = subseq(s, 1, len(s))" },
    "789": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "61", "endline": "52", "endcolumn": "63", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "786": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "58", "endline": "52", "endcolumn": "58", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "309": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "1", "column": "1", "endline": "1", "endcolumn": "3", "code": "def empty():" },
    "435": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "34", "column": "1", "endline": "34", "endcolumn": "3", "code": "def bmax(bg):" },
    "429": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "31", "column": "18", "endline": "31", "endcolumn": "25", "code": "    result = min(keys(bg))" },
    "247": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "246": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "51", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "46": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "9", "column": "14", "endline": "9", "endcolumn": "14", "code": "    result = s[0]" },
    "944": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "5", "column": "10", "endline": "5", "endcolumn": "13", "code": "forks = [Lock(),] * N" },
    "536": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "62", "column": "22", "endline": "62", "endcolumn": "23", "code": "        let n = size(bg):" },
    "495": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "51", "column": "14", "endline": "51", "endcolumn": "15", "code": "    result = bg" },
    "989": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "14", "column": "13", "endline": "14", "endcolumn": "34", "code": "            release(?forks[right])" },
    "848": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "59", "column": "1", "endline": "61", "endcolumn": "1", "code": "def notifyAll(c):" },
    "314": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "1", "column": "1", "endline": "3", "endcolumn": "1", "code": "def empty():" },
    "409": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "9", "endline": "26", "endcolumn": "19", "code": "        result += c" },
    "783": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "25", "endline": "52", "endcolumn": "72", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "526": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "8", "endline": "59", "endcolumn": "8", "code": "    if k == 0:" },
    "666": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "19", "column": "13", "endline": "19", "endcolumn": "14", "code": "            !p = new" },
    "841": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "17", "endline": "60", "endcolumn": "17", "code": "    atomically !c = bag.empty()" },
    "649": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "10", "column": "1", "endline": "14", "endcolumn": "1", "code": "def tas(lk):" },
    "494": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "51", "column": "14", "endline": "51", "endcolumn": "15", "code": "    result = bg" },
    "147": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "16", "code": "    result = [ v for _:v in d ]" },
    "586": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "855": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "62", "column": "1", "endline": "64", "endcolumn": "1", "code": "def Semaphore(cnt):" },
    "300": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "336": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "5", "endline": "5", "endcolumn": "12", "code": "    result = { elt:1 for elt in s }" },
    "303": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "93": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "929": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "81", "column": "17", "endline": "81", "endcolumn": "17", "code": "    atomically !q = list.append(!q, item)" },
    "1002": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "18", "column": "5", "endline": "18", "endcolumn": "18", "code": "    spawn diner(i)" },
    "140": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "241": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "172": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "20", "endline": "35", "endcolumn": "20", "code": "    result = [ (k, v) for k:v in d ]" },
    "954": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "24", "endline": "8", "endcolumn": "28", "code": "    let left, right = (which, (which + 1) % N):" },
    "481": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "22", "code": "        result[elt] += 1" },
    "153": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "782": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "26", "endline": "52", "endcolumn": "32", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "525": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "8", "endline": "59", "endcolumn": "8", "code": "    if k == 0:" },
    "240": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "44", "column": "24", "endline": "44", "endcolumn": "55", "code": "        let higher = [ v for v in rest where v >= pivot ]:" },
    "317": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "33", "code": "    result = { elt:1 for elt in s }" },
    "408": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "26", "column": "19", "endline": "26", "endcolumn": "19", "code": "        result += c" },
    "388": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "20", "column": "18", "endline": "20", "endcolumn": "18", "code": "        result = 0" },
    "315": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "4", "column": "1", "endline": "4", "endcolumn": "3", "code": "def fromSet(s):" },
    "853": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "63", "column": "14", "endline": "63", "endcolumn": "16", "code": "    result = cnt" },
    "780": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "31", "endline": "52", "endcolumn": "32", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "722": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "9", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "171": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "17", "endline": "35", "endcolumn": "20", "code": "    result = [ (k, v) for k:v in d ]" },
    "842": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "60", "column": "17", "endline": "60", "endcolumn": "17", "code": "    atomically !c = bag.empty()" },
    "615": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "21", "endline": "69", "endcolumn": "28", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "539": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "63", "column": "16", "endline": "63", "endcolumn": "16", "code": "            if k > n:" },
    "28": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "3", "column": "16", "endline": "3", "endcolumn": "37", "code": "    result = [ s[x] for x in {b..e-1} ]" },
    "955": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "8", "column": "24", "endline": "8", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "720": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "9", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "672": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "21", "column": "1", "endline": "23", "endcolumn": "1", "code": "def BinSema(acquired):" },
    "168": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "17", "endline": "35", "endcolumn": "20", "code": "    result = [ (k, v) for k:v in d ]" },
    "854": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "63", "column": "5", "endline": "63", "endcolumn": "12", "code": "    result = cnt" },
    "599": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "83": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "19", "column": "19", "endline": "19", "endcolumn": "19", "code": "        result += v" },
    "487": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "23", "endline": "47", "endcolumn": "23", "code": "        result[elt] = 1" },
    "723": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "37", "column": "10", "endline": "37", "endcolumn": "16", "code": "        !binsema = False" },
    "673": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "22", "column": "14", "endline": "22", "endcolumn": "21", "code": "    result = acquired" },
    "648": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "11", "column": "5", "endline": "14", "endcolumn": "1", "code": "    atomically:" },
    "146": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "16", "code": "    result = [ v for _:v in d ]" },
    "427": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "31", "column": "23", "endline": "31", "endcolumn": "24", "code": "    result = min(keys(bg))" },
    "328": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "5", "column": "16", "endline": "5", "endcolumn": "18", "code": "    result = { elt:1 for elt in s }" },
    "305": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "88": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "16", "column": "1", "endline": "21", "endcolumn": "46", "code": "def sum(a):" },
    "1000": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/code/Diners.hny", "line": "18", "column": "17", "endline": "18", "endcolumn": "17", "code": "    spawn diner(i)" },
    "141": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "588": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "524": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "58", "column": "1", "endline": "71", "endcolumn": "1", "code": "def combinations(bg, k):" },
    "852": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "63", "column": "14", "endline": "63", "endcolumn": "16", "code": "    result = cnt" },
    "302": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "38": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "6", "column": "19", "endline": "6", "endcolumn": "19", "code": "    result = s + [e,]" },
    "660": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "18", "column": "12", "endline": "18", "endcolumn": "17", "code": "        if result:" },
    "257": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "38", "endline": "45", "endcolumn": "42", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "584": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "52", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "438": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "35", "column": "5", "endline": "35", "endcolumn": "20", "code": "    assert bg != {:}" },
    "480": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "45", "column": "9", "endline": "45", "endcolumn": "24", "code": "        result[elt] += 1" },
    "721": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "36", "column": "9", "endline": "36", "endcolumn": "23", "code": "        assert !binsema" },
    "339": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "7", "column": "1", "endline": "14", "endcolumn": "1", "code": "def fromList(a):" },
    "252": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "28", "endline": "45", "endcolumn": "32", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "175": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "585": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "253": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "28", "endline": "45", "endcolumn": "32", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "678": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "24", "column": "1", "endline": "24", "endcolumn": "3", "code": "def Lock():" },
    "420": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "856": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "65", "column": "1", "endline": "65", "endcolumn": "3", "code": "def P(sema):" },
    "781": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "52", "column": "30", "endline": "52", "endcolumn": "32", "code": "        atomically when (not !lk) and (bag.multiplicity(!c, ctx) <= cnt):" },
    "664": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "19", "column": "18", "endline": "19", "endcolumn": "20", "code": "            !p = new" },
    "256": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "38", "endline": "45", "endcolumn": "42", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "179": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "16", "endline": "35", "endcolumn": "34", "code": "    result = [ (k, v) for k:v in d ]" },
    "54": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "12", "column": "1", "endline": "12", "endcolumn": "3", "code": "def tail(s):" },
    "587": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "69", "column": "32", "endline": "69", "endcolumn": "74", "code": "                    result = { add(x, hd) for x in combinations(tl, k - 1) }" },
    "484": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "16", "endline": "47", "endcolumn": "18", "code": "        result[elt] = 1" },
    "851": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "63", "column": "14", "endline": "63", "endcolumn": "16", "code": "    result = cnt" },
    "679": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "24", "column": "1", "endline": "26", "endcolumn": "1", "code": "def Lock():" },
    "98": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "23", "column": "16", "endline": "23", "endcolumn": "27", "code": "    result = { v for v in a }" },
    "174": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "35", "column": "17", "endline": "35", "endcolumn": "20", "code": "    result = [ (k, v) for k:v in d ]" },
    "661": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "18", "column": "9", "endline": "18", "endcolumn": "10", "code": "        if result:" },
    "142": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "31", "column": "16", "endline": "31", "endcolumn": "29", "code": "    result = [ v for _:v in d ]" },
    "849": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "62", "column": "1", "endline": "62", "endcolumn": "3", "code": "def Semaphore(cnt):" },
    "527": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "13", "endline": "59", "endcolumn": "13", "code": "    if k == 0:" },
    "424": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "5", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "421": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "12", "endline": "30", "endcolumn": "13", "code": "    assert bg != {:}" },
    "667": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "16", "column": "5", "endline": "20", "endcolumn": "1", "code": "    atomically:" },
    "399": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "25", "column": "16", "endline": "25", "endcolumn": "17", "code": "    for _:c in bg:" },
    "857": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "65", "column": "1", "endline": "68", "endcolumn": "1", "code": "def P(sema):" },
    "482": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "44", "column": "5", "endline": "48", "endcolumn": "1", "code": "    if elt in result:" },
    "301": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "43", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "255": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "38", "endline": "45", "endcolumn": "43", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "254": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "45", "column": "22", "endline": "45", "endcolumn": "33", "code": "            result = qsort(lower) + [pivot,] + qsort(higher)" },
    "423": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "12", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "422": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "30", "column": "18", "endline": "30", "endcolumn": "20", "code": "    assert bg != {:}" },
    "528": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "59", "column": "8", "endline": "59", "endcolumn": "13", "code": "    if k == 0:" },
    "306": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/list.hny", "line": "54", "column": "20", "endline": "54", "endcolumn": "43", "code": "        result = [ d[n-i] for i in { 1..n } ]" },
    "850": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/synch.hny", "line": "62", "column": "1", "endline": "64", "endcolumn": "1", "code": "def Semaphore(cnt):" },
    "483": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/harmony_model_checker/modules/bag.hny", "line": "47", "column": "9", "endline": "47", "endcolumn": "14", "code": "        result[elt] = 1" }
  }
}

{
  "labels": {
    "__end__": 46
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Push", "value": { "type": "address", "value": [{ "type": "atom", "value": "done" }] } },
    { "op": "Sequential" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Store", "value": [{ "type": "atom", "value": "count"}] },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "done"}] },
    { "op": "Jump", "pc": "40" },
    { "op": "Frame", "name": "handler", "args": "()" },
    { "op": "Load", "value": [{ "type": "atom", "value": "count"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "count"}] },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "done"}] },
    { "op": "Return" },
    { "op": "Jump", "pc": "40" },
    { "op": "Frame", "name": "main", "args": "()" },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "pc", "value": "8" } },
    { "op": "Trap" },
    { "op": "Load", "value": [{ "type": "atom", "value": "done"}] },
    { "op": "JumpCond", "pc": "21", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "25" },
    { "op": "Jump", "pc": "21" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Load", "value": [{ "type": "atom", "value": "count"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "ReadonlyInc" },
    { "op": "AtomicInc", "lazy": "True" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Assert" },
    { "op": "AtomicDec" },
    { "op": "ReadonlyDec" },
    { "op": "Return" },
    { "op": "Push", "value": { "type": "pc", "value": "17" } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Return" },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__ ()","start of method __init__"],
    ["Push ?done","push constant ?done"],
    ["Sequential","sequential consistency for variable on top of stack"],
    ["Push 0","push constant 0"],
    ["Store count","pop a value and store it in shared variable count"],
    ["Push False","push constant False"],
    ["Store done","pop a value and store it in shared variable done"],
    ["Jump 40","set program counter to 40"],
    ["Frame handler ()","start of method handler"],
    ["Load count","push value of shared variable count"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store count","pop a value and store it in shared variable count"],
    ["Push True","push constant True"],
    ["Store done","pop a value and store it in shared variable done"],
    ["Return","restore caller method state and push result"],
    ["Jump 40","set program counter to 40"],
    ["Frame main ()","start of method main"],
    ["Push ()","push constant ()"],
    ["Push PC(8)","push constant PC(8)"],
    ["Trap","pop a pc and argument and set trap"],
    ["Load done","push value of shared variable done"],
    ["JumpCond False 21","pop a value and jump to 21 if the value is False"],
    ["Jump 25","set program counter to 25"],
    ["Jump 21","set program counter to 21"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Load count","push value of shared variable count"],
    ["Push 1","push constant 1"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["ReadonlyInc","increment readonly counter of context; thread cannot mutate shared variables if > 0"],
    ["AtomicInc(lazy)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Push False","push constant False"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["AtomicDec","decrement atomic counter of context"],
    ["ReadonlyDec","decrement readonly counter of context"],
    ["Return","restore caller method state and push result"],
    ["Push PC(17)","push constant PC(17)"],
    ["Push ()","push constant ()"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Return","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locations": {
    "0": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 1, "column": 1, "endline": 16, "endcolumn": 19, "code": "sequential done" },
    "1": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 1, "column": 12, "endline": 1, "endcolumn": 15, "code": "sequential done" },
    "2": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 1, "column": 1, "endline": 1, "endcolumn": 15, "code": "sequential done" },
    "3": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 3, "column": 9, "endline": 3, "endcolumn": 9, "code": "count = 0" },
    "4": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 3, "column": 1, "endline": 3, "endcolumn": 7, "code": "count = 0" },
    "5": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 4, "column": 8, "endline": 4, "endcolumn": 12, "code": "done = False" },
    "6": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 4, "column": 1, "endline": 4, "endcolumn": 6, "code": "done = False" },
    "7": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 6, "column": 1, "endline": 6, "endcolumn": 3, "code": "def handler():" },
    "8": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 6, "column": 1, "endline": 9, "endcolumn": 1, "code": "def handler():" },
    "9": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 7, "column": 5, "endline": 7, "endcolumn": 14, "code": "    count += 1" },
    "10": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 7, "column": 14, "endline": 7, "endcolumn": 14, "code": "    count += 1" },
    "11": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 7, "column": 5, "endline": 7, "endcolumn": 14, "code": "    count += 1" },
    "12": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 7, "column": 5, "endline": 7, "endcolumn": 12, "code": "    count += 1" },
    "13": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 8, "column": 12, "endline": 8, "endcolumn": 15, "code": "    done = True" },
    "14": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 8, "column": 5, "endline": 8, "endcolumn": 10, "code": "    done = True" },
    "15": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 6, "column": 1, "endline": 9, "endcolumn": 1, "code": "def handler():" },
    "16": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 10, "column": 1, "endline": 10, "endcolumn": 3, "code": "def main():" },
    "17": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 10, "column": 1, "endline": 15, "endcolumn": 1, "code": "def main():" },
    "18": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 11, "column": 17, "endline": 11, "endcolumn": 18, "code": "    trap handler()" },
    "19": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 11, "column": 10, "endline": 11, "endcolumn": 16, "code": "    trap handler()" },
    "20": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 11, "column": 5, "endline": 11, "endcolumn": 18, "code": "    trap handler()" },
    "21": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 14, "code": "    await done" },
    "22": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 12, "column": 5, "endline": 12, "endcolumn": 14, "code": "    await done" },
    "23": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 14, "code": "    await done" },
    "24": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 12, "column": 11, "endline": 12, "endcolumn": 14, "code": "    await done" },
    "25": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "26": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "27": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 12, "endline": 13, "endcolumn": 16, "code": "    assert count == 1" },
    "28": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 21, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "29": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 12, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "30": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "31": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "32": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 13, "column": 5, "endline": 13, "endcolumn": 21, "code": "    assert count == 1" },
    "33": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 5, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "34": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 5, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "35": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 12, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "36": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 5, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "37": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 5, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "38": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 14, "column": 5, "endline": 14, "endcolumn": 16, "code": "    assert False" },
    "39": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 10, "column": 1, "endline": 15, "endcolumn": 1, "code": "def main():" },
    "40": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 16, "column": 7, "endline": 16, "endcolumn": 10, "code": "spawn main()" },
    "41": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 16, "column": 11, "endline": 16, "endcolumn": 12, "code": "spawn main()" },
    "42": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 12, "code": "spawn main()" },
    "43": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 16, "column": 1, "endline": 16, "endcolumn": 12, "code": "spawn main()" },
    "44": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 1, "column": 1, "endline": 16, "endcolumn": 19, "code": "sequential done" },
    "45": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/interrupt.hny", "line": 1, "column": 1, "endline": 16, "endcolumn": 19, "code": "sequential done" }
  }
}

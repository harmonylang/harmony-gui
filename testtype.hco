{
  "issue": "Safety violation",
  "macrosteps": [
    {
      "id": "1",
      "len": "1",
      "tid": "0",
      "ctx": "7fc21b4c1b59",
      "name": "__init__()",
      "microsteps": [
        {
          "shared": { },
          "npc": "1",
          "fp": "1",
          "trace": [
            {
              "pc": "1",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            }
          ],
          "local": { "result": { "type": "address", "value": [] } },
          "atomic": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },
        {
          "npc": "49",
          "push": [ ],
          "pc": "1"
        },
        {
          "npc": "50",
          "atomic": "2",
          "push": [ ],
          "pc": "49"
        },
        {
          "npc": "51",
          "push": [ { "type": "pc", "value": "2" } ],
          "pc": "50"
        },
        {
          "shared": { "x": { "type": "pc", "value": "2" } },
          "npc": "52",
          "pop": "1",
          "push": [ ],
          "pc": "51"
        },
        {
          "npc": "53",
          "atomic": "1",
          "push": [ ],
          "pc": "52"
        },
        {
          "npc": "54",
          "push": [ { "type": "pc", "value": "49" } ],
          "pc": "53"
        },
        {
          "shared": { "x": { "type": "pc", "value": "2" }, "y": { "type": "pc", "value": "49" } },
          "npc": "55",
          "pop": "1",
          "push": [ ],
          "pc": "54"
        },
        {
          "npc": "56",
          "readonly": "1",
          "push": [ ],
          "pc": "55"
        },
        {
          "npc": "57",
          "atomic": "2",
          "push": [ ],
          "pc": "56"
        },
        {
          "npc": "58",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "57"
        },
        {
          "npc": "58",
          "failure": "Harmony assertion failed",
          "mode": "failed",
          "pop": "1",
          "push": [ ],
          "pc": "58"
        }
      ],
      "invfails": [
      ],
      "ctxbag": {
          "7fc21fa000e9": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fc21fa000e9",
          "fp": "1",
          "name": "__init__()",
          "entry": "0",
          "pc": "58",
          "trace": [
            {
              "pc": "58",
              "xpc": "0",
              "method": "__init__()",
              "calltype": "process",
              "vars": { "result": { "type": "address", "value": [] } },
              "sp": 0
            }
          ],
          "failure": "Harmony assertion failed",
          "this": { "type": "dict", "value": [] },
          "atomic": "2",
          "readonly": "1",
          "mode": "failed"
        }
      ]
    }
  ],
  "code": [
    "Frame __init__ ()",
    "Jump 49",
    "Frame diner which",
    "Push ()",
    "LoadVar which",
    "2-ary ListAdd",
    "LoadVar which",
    "DelVar which",
    "Push 1",
    "2-ary +",
    "Load N",
    "2-ary %",
    "2-ary ListAdd",
    "StoreVar (left, right)",
    "Push { False, True }",
    "Choose",
    "JumpCond False 46",
    "Push ?acquire",
    "Push ?forks",
    "LoadVar left",
    "Address",
    "Address",
    "Load",
    "Pop",
    "Push ?acquire",
    "Push ?forks",
    "LoadVar right",
    "Address",
    "Address",
    "Load",
    "Pop",
    "Push ?release",
    "Push ?forks",
    "LoadVar left",
    "Address",
    "Address",
    "Load",
    "Pop",
    "Push ?release",
    "Push ?forks",
    "LoadVar right",
    "Address",
    "Address",
    "Load",
    "Pop",
    "Jump 14",
    "DelVar left",
    "DelVar right",
    "Return",
    "AtomicInc(eager)",
    "Push PC(2)",
    "Store x",
    "AtomicDec",
    "Push PC(49)",
    "Store y",
    "ReadonlyInc",
    "AtomicInc(lazy)",
    "Push False",
    "Assert",
    "AtomicDec",
    "ReadonlyDec",
    "Return",
    "DelVar result"
  ],
  "explain": [
    "start of method __init__",
    "set program counter to 49",
    "start of method diner",
    "push constant ()",
    "push the value of which",
    "pop 2 values and push the result of applying ListAdd",
    "push the value of which",
    "delete method variable which",
    "push constant 1",
    "pop 2 values and push the result of applying +",
    "push value of shared variable N",
    "pop 2 values and push the result of applying %",
    "pop 2 values and push the result of applying ListAdd",
    "pop a value and store in (left, right)",
    "push constant { False, True }",
    "pop a set value and push one of its elements",
    "pop a value and jump to 46 if the value is False",
    "push constant ?acquire",
    "push constant ?forks",
    "push the value of left",
    "combine the top two values on the stack into an address and push the result",
    "combine the top two values on the stack into an address and push the result",
    "pop an address and push the value at the address",
    "discard the top value on the stack",
    "push constant ?acquire",
    "push constant ?forks",
    "push the value of right",
    "combine the top two values on the stack into an address and push the result",
    "combine the top two values on the stack into an address and push the result",
    "pop an address and push the value at the address",
    "discard the top value on the stack",
    "push constant ?release",
    "push constant ?forks",
    "push the value of left",
    "combine the top two values on the stack into an address and push the result",
    "combine the top two values on the stack into an address and push the result",
    "pop an address and push the value at the address",
    "discard the top value on the stack",
    "push constant ?release",
    "push constant ?forks",
    "push the value of right",
    "combine the top two values on the stack into an address and push the result",
    "combine the top two values on the stack into an address and push the result",
    "pop an address and push the value at the address",
    "discard the top value on the stack",
    "set program counter to 14",
    "delete method variable left",
    "delete method variable right",
    "restore caller method state and push result",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push constant PC(2)",
    "pop a value and store it in shared variable x",
    "decrement atomic counter of context",
    "push constant PC(49)",
    "pop a value and store it in shared variable y",
    "increment readonly counter of context; thread cannot mutate shared variables if > 0",
    "increment atomic counter of context; thread runs uninterrupted if larger than 0",
    "push constant False",
    "pop a condition and raise exception if condition is false",
    "decrement atomic counter of context",
    "decrement readonly counter of context",
    "restore caller method state and push result",
    "delete method variable result"
  ],
  "locations": {
    "43": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "13", "endline": "8", "endcolumn": "34", "code": "            release(?forks[right])" },
    "50": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "11", "column": "9", "endline": "11", "endcolumn": "13", "code": "LB: x = diner" },
    "62": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "14", "endcolumn": "7", "code": "def diner(which):" },
    "42": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "13", "endline": "8", "endcolumn": "34", "code": "            release(?forks[right])" },
    "2": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "10", "endcolumn": "1", "code": "def diner(which):" },
    "51": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "11", "column": "5", "endline": "11", "endcolumn": "7", "code": "LB: x = diner" },
    "3": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "24", "endline": "2", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "12": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "24", "endline": "2", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "56": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "1", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "9": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "32", "endline": "2", "endcolumn": "40", "code": "    let left, right = (which, (which + 1) % N):" },
    "41": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "22", "endline": "8", "endcolumn": "33", "code": "            release(?forks[right])" },
    "8": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "40", "endline": "2", "endcolumn": "40", "code": "    let left, right = (which, (which + 1) % N):" },
    "61": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "14", "endcolumn": "7", "code": "def diner(which):" },
    "13": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "5", "endline": "10", "endcolumn": "1", "code": "    let left, right = (which, (which + 1) % N):" },
    "52": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "11", "column": "1", "endline": "11", "endcolumn": "14", "code": "LB: x = diner" },
    "11": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "31", "endline": "2", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "40": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "28", "endline": "8", "endcolumn": "32", "code": "            release(?forks[right])" },
    "53": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "12", "column": "5", "endline": "12", "endcolumn": "6", "code": "y = LB" },
    "10": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "45", "endline": "2", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "60": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "1", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "20": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "22", "endline": "4", "endcolumn": "32", "code": "            acquire(?forks[left])" },
    "4": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "24", "endline": "2", "endcolumn": "28", "code": "    let left, right = (which, (which + 1) % N):" },
    "30": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "13", "endline": "5", "endcolumn": "34", "code": "            acquire(?forks[right])" },
    "7": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "32", "endline": "2", "endcolumn": "36", "code": "    let left, right = (which, (which + 1) % N):" },
    "6": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "32", "endline": "2", "endcolumn": "36", "code": "    let left, right = (which, (which + 1) % N):" },
    "47": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "10", "endcolumn": "1", "code": "def diner(which):" },
    "17": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "13", "endline": "4", "endcolumn": "19", "code": "            acquire(?forks[left])" },
    "22": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "13", "endline": "4", "endcolumn": "33", "code": "            acquire(?forks[left])" },
    "32": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "22", "endline": "7", "endcolumn": "26", "code": "            release(?forks[left])" },
    "0": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "14", "endcolumn": "7", "code": "def diner(which):" },
    "15": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "3", "column": "15", "endline": "3", "endcolumn": "37", "code": "        while choose({ False, True }):" },
    "39": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "22", "endline": "8", "endcolumn": "26", "code": "            release(?forks[right])" },
    "29": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "13", "endline": "5", "endcolumn": "34", "code": "            acquire(?forks[right])" },
    "1": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "1", "endcolumn": "3", "code": "def diner(which):" },
    "57": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "8", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "5": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "2", "column": "24", "endline": "2", "endcolumn": "45", "code": "    let left, right = (which, (which + 1) % N):" },
    "55": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "1", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "45": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "10", "column": "1", "endline": "10", "endcolumn": "1", "code": "" },
    "18": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "22", "endline": "4", "endcolumn": "26", "code": "            acquire(?forks[left])" },
    "25": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "22", "endline": "5", "endcolumn": "26", "code": "            acquire(?forks[right])" },
    "35": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "13", "endline": "7", "endcolumn": "33", "code": "            release(?forks[left])" },
    "49": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "11", "column": "1", "endline": "11", "endcolumn": "14", "code": "LB: x = diner" },
    "34": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "22", "endline": "7", "endcolumn": "32", "code": "            release(?forks[left])" },
    "24": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "13", "endline": "5", "endcolumn": "19", "code": "            acquire(?forks[right])" },
    "19": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "28", "endline": "4", "endcolumn": "31", "code": "            acquire(?forks[left])" },
    "48": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "10", "endcolumn": "1", "code": "def diner(which):" },
    "27": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "22", "endline": "5", "endcolumn": "33", "code": "            acquire(?forks[right])" },
    "37": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "13", "endline": "7", "endcolumn": "33", "code": "            release(?forks[left])" },
    "26": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "28", "endline": "5", "endcolumn": "32", "code": "            acquire(?forks[right])" },
    "59": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "1", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "36": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "13", "endline": "7", "endcolumn": "33", "code": "            release(?forks[left])" },
    "31": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "13", "endline": "7", "endcolumn": "19", "code": "            release(?forks[left])" },
    "21": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "13", "endline": "4", "endcolumn": "33", "code": "            acquire(?forks[left])" },
    "16": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "3", "column": "9", "endline": "10", "endcolumn": "1", "code": "        while choose({ False, True }):" },
    "44": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "13", "endline": "8", "endcolumn": "34", "code": "            release(?forks[right])" },
    "33": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "7", "column": "28", "endline": "7", "endcolumn": "31", "code": "            release(?forks[left])" },
    "14": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "3", "column": "24", "endline": "3", "endcolumn": "34", "code": "        while choose({ False, True }):" },
    "23": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "4", "column": "13", "endline": "4", "endcolumn": "33", "code": "            acquire(?forks[left])" },
    "58": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "13", "column": "1", "endline": "13", "endcolumn": "12", "code": "assert False" },
    "46": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "1", "column": "1", "endline": "10", "endcolumn": "1", "code": "def diner(which):" },
    "28": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "5", "column": "13", "endline": "5", "endcolumn": "34", "code": "            acquire(?forks[right])" },
    "38": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "8", "column": "13", "endline": "8", "endcolumn": "19", "code": "            release(?forks[right])" },
    "54": { "file": "/Users/lirenyu/Downloads/harmony-gui/harmony-gui/testtype.hny", "line": "12", "column": "1", "endline": "12", "endcolumn": "3", "code": "y = LB" }
  }
}
